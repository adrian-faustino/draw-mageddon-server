{"version":3,"sources":["helpers/util.js","constants.js","helpers/paletteHelpers.js","helpers/drawHelpers.js","components/NavButton.js","components/Palette.js","components/MainImageStyles.js","components/MainImage.js","components/LineSize.js","helpers/countdownHelpers.js","components/CountdownTimer.js","components/CountdownTimerStyles.js","components/views/DrawGameViewStyles.js","components/views/DrawGameView.js","components/PlayerLobbyStatus.js","components/views/GuestLobbyView.js","components/views/HostLobbyView.js","components/views/InstructionsView.js","components/views/LandingView.js","helpers/renderFinalHelpers.js","components/views/ResultsView.js","components/views/ShareView.js","App.js","serviceWorker.js","index.js","assets/mona-lisa.jpg"],"names":["randomNumAllInclusive","min","max","Math","ceil","floor","random","util","generateLobbyID","ID_length","ALPHA_NUM","id","i","length","errorListener","socket","on","msg","console","log","err","CANVAS_H","window","innerHeight","constants","VIEW_TIME","ROUND_TIME","API","MIN_RENDER_TIME","CANVAS_W","paletteHelpers","togglePalette","e","state","setState","preventDefault","openColor","prev","toggleLineSize","openLineSize","updateColor","currentColor","updateLineSize","currentLineSize","drawHelpers","onMouseOutHandler","drawing","onMouseDownHandler","onMouseUpHandler","onMouseMoveHandler","maxWidth","maxHeight","coordinates","x_offset","innerWidth","y_offset","x","clientX","y","clientY","coordinate","color","lineSize","draw","ctx","globalAlpha","strokeStyle","lineWidth","lineCap","beginPath","lineTo","stroke","NavButton","props","className","onClick","changeViewHandler","nextView","onClickHandler","buttonTitle","Palette","MainImageStyles","imgStyles","key","val","style","height","width","transform","imgContainerStyles","overflow","containerWrapperStyles","display","justifyContent","alignItems","MainImage","myQuadrant","draggable","_imgStyles","_imgContainerStyles","_containerWrapperStyles","src","IMG_SRC","LineSize","countdownHelpers","formatZero","num","places","char","toString","formatMS","totalMS","totalMS_","h","m","s","ms","timerStyles","styles","CountdownTimer","timeInMS","warningOn","useState","startTime","Date","now","_timerStyles","timeLeft","formatted_M","formatted_S","DrawGameViewStyles","silhouetteStyles","slicerStyles","DrawGameView","setGamePromptHandler","lobbyID","myLobbyObj","setFinalCoordinatesHandler","roundFinished","opacity","roundTime","useEffect","finalCoordinates","errMsg","PLAYERS_IN_ROOM","Object","keys","players","data","axios","post","then","catch","canvasRef","useRef","current","getContext","clearRect","forEach","top","right","_silhouetteStyles","_slicerStyles","bg_h","bg_w","colorClickHandler","lineSizeClickHandler","alt","ref","onMouseOut","onMouseDown","onMouseUp","onMouseMove","PlayerLobbyStatus","username","GuestLobbyView","myUsername","setMyLobbyObjHandler","setMyPlayerIDHandler","setLobbyIDHandler","myPlayerID","tempInput","host","joiner","prompt","resp","error","leaver","usernames","greeting","trim","map","playerID","onChange","target","value","placeholder","type","emit","response","joinRoomHandler","HostLobbyView","genLobbyID","toCopyStr","innerHTML","tempElement","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","startButtonHandler","backButtonHandler","InstructionsView","tick","interval","setInterval","clearInterval","LandingView","inputChangeHandler","autocomplete","strokeData","_x","_y","renderFinalHelpers","renderQuadrants","quadrant","delay","setTimeout","renderQuad_1","renderQuad_2","renderQuad_3","renderQuad_4","ResultsView","toggleReplay","replayHandler","ShareView","App","view","gamePrompt","socketIOClient","str","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.d379cee0.chunk.js","sourcesContent":["// returns a random integer inclusize of min and max\nconst randomNumAllInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// returns a 6 digit alphanumeric all capital ID\nconst generateLobbyID = (ID_length) => {\n  // List does not include 0 or O;\n  const ALPHA_NUM = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789';\n  let id = ''\n\n  // push random letters/numbers into the array until desired ID length\n  for (let i = 0; i < ID_length; i++) {\n    const randomIndex = randomNumAllInclusive(0, ALPHA_NUM.length - 1);\n    id += ALPHA_NUM[randomIndex]\n  }\n\n  return id;\n}\n\n// set up error listener\nconst errorListener = (socket) => {\n  socket.on('success', msg => console.log('Success:', msg));\n  socket.on('err', err => console.log('Error:', err));\n};\n\n\nconst util = {\n  randomNumAllInclusive,\n  generateLobbyID,\n  errorListener,\n};\n\nexport default util;","/** All time variables in milliseconds **/\n\nconst API = 'http://localhost:5555';\n\n/** length of time in InstructionsView **/\nconst VIEW_TIME = 7000; \n\n/** length of time in DrawingGameView **/\nconst ROUND_TIME = 60000;\n\n/** for rendering final picture animation **/\nconst MIN_RENDER_TIME = 5000; \nconst CANVAS_H = window.innerHeight * 0.9;\nconst CANVAS_W = CANVAS_H * 0.8;\n\nconst constants = {\n  VIEW_TIME,\n  ROUND_TIME,\n  API,\n  MIN_RENDER_TIME,\n  CANVAS_W,\n  CANVAS_H\n}\n\nexport default constants;","const togglePalette = (e, state, setState) => {\n  e.preventDefault();\n  const openColor = !state.openColor;\n\n  setState(prev => ({...prev, openColor}));\n}\n\nconst toggleLineSize = (e, state, setState) => {\n  e.preventDefault();\n  const openLineSize = !state.openLineSize;\n\n  setState(prev => ({...prev, openLineSize}));\n}\n\nconst updateColor = (currentColor, state, setState) => {\n  console.log('Updating color to', currentColor);\n\n  setState(prev => ({...prev, currentColor, openColor: false}));\n}\n\nconst updateLineSize = (currentLineSize , state, setState) => {\n  console.log('Updating lineSize to', currentLineSize);\n\n  setState(prev => ({...prev, currentLineSize, openLineSize: false}));\n}\n\nconst paletteHelpers = {\n  togglePalette,\n  toggleLineSize,\n  updateColor,\n  updateLineSize\n};\n\nexport default paletteHelpers;","const onMouseOutHandler = (setState) => {\n  const drawing = false;\n\n  setState(prev => ({...prev, drawing}));\n}\n\nconst onMouseDownHandler = (setState) => {\n  const drawing = true;\n  \n  setState(prev => ({...prev, drawing}));\n};\n\n\nconst onMouseUpHandler = (setState) => {\n  const drawing = false;\n\n  setState(prev => ({...prev, drawing}));\n};\n\n\nconst onMouseMoveHandler = (e, state, setState, maxWidth, maxHeight) => {\n  const { coordinates, drawing, currentColor, currentLineSize } = state;\n\n  if(drawing) {\n    const x_offset = window.innerWidth / 2 - (maxWidth / 2);\n    const y_offset = window.innerHeight / 2 - (maxHeight / 2);\n\n    let x = e.clientX - x_offset;\n    let y = e.clientY - y_offset;\n\n    // percentage relative to screen\n    y = y / maxHeight;\n    x = x / maxWidth;\n    const color = currentColor;\n    const lineSize = currentLineSize;\n\n    const coordinate = {\n      x,\n      y,\n      color,\n      lineSize\n    }\n    setState(prev => ({...prev, coordinates: [...coordinates, coordinate], maxWidth, maxHeight}));\n  }\n\n};\n\n\nconst draw = (ctx, coordinate) => {\n  const { x, y, color, lineSize } = coordinate;\n\n  let globalAlpha = lineSize < 20 ? 0.8 : 0.2; \n\n  ctx.globalAlpha = globalAlpha;\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.lineCap = 'round';\n  ctx.beginPath();\n  ctx.lineTo(x, y);\n  ctx.stroke();\n};\n\nconst drawHelpers = {\n  onMouseOutHandler,\n  onMouseDownHandler,\n  onMouseUpHandler,\n  onMouseMoveHandler,\n  draw\n}\n\nexport default drawHelpers;","import React from 'react'\n// import classNames from \"classnames\";\nimport \"./NavButton.css\";\n\n\n// Notes: COMPLETE for now. Desired functionality tested.\n\nexport default function NavButton(props) {\n  const onClickHandler = e => {\n    e.preventDefault()\n\n    // props.nextView is passed down from the parent component. Change the string that is passed down to this button component to dictate which view to go into next.\n    props.changeViewHandler(props.nextView)\n  }\n\n  return (\n    <div>\n      <button\n      className=\"NavButton__btn App__colorScheme--button\"\n      onClick={e => onClickHandler(e)}\n      >{props.buttonTitle}</button>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Palette.css';\n\n\nexport default function Palette(props) {\n  const { updateColor, state, setState } = props;\n\n  return (\n    <ul className=\"Palette__container\">\n\n      {/* 1st row */}\n      <li onClick={() => {\n        updateColor('brown', state, setState);\n        }}\n        >\n        <i id=\"brownColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('silver', state, setState);\n        }}\n        >\n        <i id=\"silverColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('pink', state, setState);\n        }}\n        >\n        <i id=\"pinkColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('green', state, setState);\n        }}\n        >\n        <i id=\"greenColor\" className=\"fas fa-tint\"></i>\n      </li>\n\n      {/* 2nd row */}\n      <li onClick={() => {\n        updateColor('red', state, setState);\n        }}\n        >\n        <i id=\"redColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('orange', state, setState);\n        }}\n        >\n        <i id=\"orangeColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('yellow', state, setState);\n        }}\n        >\n        <i id=\"yellowColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('khaki', state, setState);\n        }}\n        >\n        <i id=\"khakiColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      {/* 3rd row */}\n      <li onClick={() => {\n        updateColor('blue', state, setState);\n        }}\n        >\n        <i id=\"blueColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('violet', state, setState);\n        }}\n        >\n        <i id=\"violetColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('black', state, setState);\n        }}\n        >\n        <i id=\"blackColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('white', state, setState);\n        }}\n        >\n        <i id=\"whiteColor\" className=\"fas fa-tint\"></i>\n      </li>\n\n      {/* 4th row */}\n      <li onClick={() => {\n        updateColor('lightskyblue', state, setState);\n        }}\n        >\n        <i id=\"lightskyblueColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('lightgreen', state, setState);\n        }}\n        >\n        <i id=\"lightgreenColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('purple', state, setState);\n        }}\n        >\n        <i id=\"purpleColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('coral', state, setState);\n        }}\n        >\n        <i id=\"coralColor\" className=\"fas fa-tint\"></i>\n      </li>\n    </ul>\n  )\n}\n\n{/* === LINE SIZE === */}\n{/* 1st row */}\n// <li onClick={() => {\n//   updateLineSize(40, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeXL\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(30, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeL\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(20, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeM\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(10, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeS\" className=\"fas fa-paint-brush\"></i>\n// </li>","const imgStyles = (key, val) => {\n  const style = {\n    height: '800px',\n    width: '600px',\n    transform: 'translate(0, -50%)'\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n  return style;\n}\n\nconst imgContainerStyles = (key, val) => {\n  const style = {\n    height: '400px',\n    width: '300px',\n    overflow: 'hidden'\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\nconst containerWrapperStyles = (key, val) => {\n  const style = {\n    height: '100vh',\n    width: '100vw',\n    display: 'grid',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\nconst MainImageStyles = {\n  imgStyles,\n  imgContainerStyles,\n  containerWrapperStyles\n}\n\nexport default MainImageStyles;","import React from 'react'\n\n// assets\nimport IMG_SRC from '../assets/mona-lisa.jpg'\n\n// styles\nimport './MainImage.css';\nimport MainImageStyles from './MainImageStyles';\n\nconst { imgStyles,\n  imgContainerStyles,\n  containerWrapperStyles } = MainImageStyles;\n  \n\nexport default function MainImage(props) {\n  const { myQuadrant, draggable } = props;\n\n  /*** make shallow copies and modify - fix for strict mode? ***/\n  const _imgStyles = imgStyles();\n  const _imgContainerStyles = imgContainerStyles();\n  const _containerWrapperStyles = containerWrapperStyles();\n  \n\n  if(myQuadrant === 'quadrant_1') {\n    _imgStyles['transform'] = 'translate(0, 0)';\n  } else if(myQuadrant === 'quadrant_2') {\n    _imgStyles['transform'] = 'translate(-50%, 0)';\n  } else if(myQuadrant === 'quadrant_3') {\n    _imgStyles['transform'] = 'translate(0, -50%)';\n  } else if(myQuadrant === 'quadrant_4') {\n    _imgStyles['transform'] = 'translate(-50%, -50%)';\n  }\n\n\n  return (\n    <div style={_containerWrapperStyles}>\n      <div className=\"MainImage__reference\" style={_imgContainerStyles}>\n        <img\n        className={\"MainImage__IMG\"}\n        draggable={draggable}\n        style={_imgStyles}\n        src={IMG_SRC}/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// styles\nimport './LineSize.css'\n\nexport default function LineSize(props) {\n\n  const { updateLineSize, state, setState } = props;\n\n\n  return (\n    <ul className=\"LineSize__container\">\n      \n    \n      <li onClick={() => {\n        updateLineSize(80, state, setState);\n        }}>\n        <i id=\"sizeXL\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(45, state, setState);\n        }}>\n        <i id=\"sizeL\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(20, state, setState);\n        }}>\n        <i id=\"sizeM\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(6, state, setState);\n        }}>\n        <i id=\"sizeS\" className=\"fas fa-paint-brush\"></i>\n      </li>\n    </ul>\n  )\n}\n","const formatMS = totalMS => {\n  let totalMS_ = totalMS;\n\n  const h = Math.floor(totalMS_ / (60 * 60 * 1000));\n  if (h > 0) {\n    totalMS_ = totalMS_ - (h * 60 * 60 * 1000);\n  }\n\n  const m = Math.floor(totalMS_ / (60 * 1000));\n  if (m > 0) {\n    totalMS_ = totalMS_ - (m * 60 * 1000);\n  }\n\n  const s = Math.floor(totalMS_ / (1000));\n  if (s > 0) {\n    totalMS_ = totalMS_ - (s * 1000);\n  }\n \n  const ms = totalMS_;\n\n  return {h, m, s, ms};\n};\n\nconst formatZero = (num, places) => {\n  let char = num.toString();\n\n  while (char.length < places) {\n    char = '0' + char;\n  }\n\n  return char;\n}\n\nconst countdownHelpers = {\n  formatZero,\n  formatMS\n};\n\nexport default countdownHelpers;","import React, { useState, useEffect } from 'react'\n\n// styles\nimport './CountdownTimer.css';\nimport CountdownTimerStyles from './CountdownTimerStyles';\n\n// helpers\nimport countdownHelpers from '../helpers/countdownHelpers';\n\nconst { timerStyles } = CountdownTimerStyles;\nconst { formatZero, formatMS } = countdownHelpers;\n\n\nexport default function CountdownTimer(props) {\n  const { timeInMS, warningOn } = props;\n\n  const [state, setState] = useState({\n    ROUND_TIME: timeInMS,\n    startTime: Date.now(),\n  })\n  const { ROUND_TIME, startTime } = state;\n\n  // styles\n  const _timerStyles = timerStyles();\n\n  /** Timer logic **/\n  const timeNow = new Date();\n  const elapsed = timeNow - startTime;\n  let timeLeft = ROUND_TIME - elapsed;\n\n  /** Trigger 'Time up' screen */\n  if(timeLeft <= 0) {\n    timeLeft = 0;\n  }\n\n  if(timeLeft <= 30000 && warningOn) {\n    _timerStyles['animation'] = 'flash--warning 0.4s infinite';\n    _timerStyles['animationDirection'] = 'alternate-reverse';\n  } \n\n  const { h, m, s, ms } = formatMS(timeLeft);\n  const formatted_M = formatZero(m, 2);\n  const formatted_S = formatZero(s, 2);\n\n\n  return (\n    <div className=\"InstructionsView__header--timer\">\n      <span \n      style={_timerStyles}\n      className=\"\">{formatted_M}:{formatted_S}</span>\n\n\n      \n    </div>\n  )\n}\n    \n// {timeLeft <= 0 && (<span className=\"CountdownTimer__timeUp--container\"><div className=\"CountdownTimer__timeUp--msg\">Time's up!</div></span>)}\n\n// <div style={_timerStyles} className=\"CountdownTimer__container\">\n//   <span className=\"\">{formatted_M}</span>:<span className=\"\">{formatted_S}</span>\n// </div>","const timerStyles = (key, val) => {\n  const styles = {\n\n  }\n\n  if(key) {\n    styles[key] = val;\n  }\n\n  return styles;\n}\n\nconst CountdownTimerStyles = {\n  timerStyles\n}\n\nexport default CountdownTimerStyles;","import IMG_SRC from '../../assets/mona-lisa.jpg';\n\nconst silhouetteStyles = (key, val) => {\n  const style = {\n    transform: 'translate(25%, -25%)'\n  };\n\n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n};\n\nconst slicerStyles = (key, val) => {\n  const style = {\n    height: null,\n    width: null\n  }\n\n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\n\n\nconst DrawGameViewStyles = {\n  silhouetteStyles,\n  slicerStyles\n}\n\nexport default DrawGameViewStyles;","import React, { useState, useEffect, useRef } from 'react'\nimport './DrawGameView.css';\nimport axios from 'axios';\n\n// helpers\nimport paletteHelpers from '../../helpers/paletteHelpers';\nimport drawHelpers from '../../helpers/drawHelpers';\nimport constants from '../../constants';\n\n// Notes: We will remove the NavButton component later and replace it with a socket emit so it automatically moves to the next page for all the players\n\n// subcomponents\nimport NavButton from '../NavButton';\nimport Palette from '../Palette';\nimport MainImage from '../MainImage';\nimport LineSize from '../LineSize';\nimport CountdownTimer from '../CountdownTimer';\n\n// styles\nimport IMG_SRC from '../../assets/mona-lisa.jpg'\nimport DrawGameViewStyles from './DrawGameViewStyles';\n\n\n\nconst { API, ROUND_TIME, CANVAS_W, CANVAS_H } = constants;\nconst { silhouetteStyles, slicerStyles } = DrawGameViewStyles;\n\n\nexport default function DrawGameView(props) {\n  const { setGamePromptHandler, lobbyID, socket, changeViewHandler, myQuadrant, myLobbyObj, setFinalCoordinatesHandler } = props;\n\n  const [state, setState] = useState({\n    coordinates: [],\n    drawing: false,\n    currentColor: 'black',\n    currentLineSize: 6,\n    openLineSize: false,\n    openColor: false,\n    roundFinished:false,\n    maxWidth: null,\n    maxHeight: null,\n    opacity: 1\n  });\n\n  const { coordinates, drawing, currentColor, currentLineSize, openLineSize, openColor, roundTime, roundFinished, maxWidth, maxHeight, opacity } = state;\n\n\n  // helpers\n  const { togglePalette, toggleLineSize, updateLineSize, updateColor } = paletteHelpers;\n  const { onMouseOutHandler, onMouseUpHandler, onMouseDownHandler, onMouseMoveHandler, draw } = drawHelpers;\n\n  /** Game state listeners **/\n  useEffect(() => {\n    socket.on('roundFinished', () => {\n      console.log('Round finished!');\n      const roundFinished = true;\n      setState(prev => ({...prev, roundFinished}));\n    })\n    \n    /** Listen for final coordinates at the end of the game **/\n    socket.on('finalCoordinates', finalCoordinates => {\n      console.log('Updating final coordinates.....');\n      setFinalCoordinatesHandler(finalCoordinates);\n      changeViewHandler('ResultsView');\n    })\n\n    socket.on('fadeSilhouette', opacity => {\n      setState(prev => ({...prev, opacity}));\n    })\n\n    socket.on('err', errMsg => {\n      setGamePromptHandler(errMsg);\n    })\n  }, [])\n\n\n  // send final coordinates before view change\n  useEffect(() => {\n    if(roundFinished) {\n      const PLAYERS_IN_ROOM = Object.keys(myLobbyObj.players).length;\n      \n      const data = {\n        coordinates,\n        lobbyID,\n        myQuadrant,\n        PLAYERS_IN_ROOM\n      }\n\n      console.log('Game finished. Sending final coordinates...', coordinates);\n\n      axios.post(API + '/finalCoords', data)\n      .then(() => {\n        // set mouse pointer events in this view to none\n      })\n      .catch(err => console.log(err));\n    }\n  }, [roundFinished])\n\n\n  // canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    coordinates.forEach(coordinate => {\n      const { x, y, color, lineSize } = coordinate;\n      const data = {\n        x: x * maxWidth,\n        y: y * maxHeight,\n        color,\n        lineSize\n      }\n      draw(ctx, data);\n    });\n  });\n\n\n  // ** BG LOGIC AND TRANSFORMATIONS ** //\n  const _silhouetteStyles = silhouetteStyles();\n  const _slicerStyles = slicerStyles();\n  const bg_h = (window.innerHeight * 0.9) * 2;\n  const bg_w = bg_h * 0.8;\n  \n  \n  let top;\n  let right;\n  if(myQuadrant === 'quadrant_1') {\n    top = '50%';\n    right = '50%';\n  } else if(myQuadrant === 'quadrant_2') {\n    top = '50%';\n    right = '150%';\n  } else if(myQuadrant === 'quadrant_3') {\n    top = '-50%';\n    right = '50%';\n  } else if(myQuadrant === 'quadrant_4') {\n    top = '-50%';\n    right = '150%';\n  }\n  _silhouetteStyles['top'] = top;\n  _silhouetteStyles['right'] = right;\n  _silhouetteStyles['opacity'] = opacity;\n\n  /** Set slicer height and width **/\n  _slicerStyles['height'] = CANVAS_H;\n  _slicerStyles['width'] = CANVAS_W;\n\n\n  // ** PALETTE BUTTONS LOGIC ** //\n  const lineSizeClickHandler = e => {\n    setState(prev => ({...prev, openColor: false}));\n    toggleLineSize(e, state, setState);\n  }\n\n  const colorClickHandler = e => {\n    setState(prev => ({...prev, openLineSize: false}));\n    togglePalette(e, state, setState);\n  }\n\n\n  return (\n    <div>\n      <div className=\"InstructionsView__header App__colorScheme--header\" >\n        <CountdownTimer\n        warningOn={true}\n        timeInMS={ROUND_TIME}/>\n\n        <button\n        className=\"App__colorScheme--palette\"\n        onClick={e => colorClickHandler(e)}><i\n        style={{color: currentColor}} className=\"fas fa-palette\"></i>\n        </button>\n\n        <button\n          className=\"App__colorScheme--palette\"\n          onClick={e => lineSizeClickHandler(e)}><i \n          style={{color: currentColor}}\n          className=\"fas fa-paint-brush\"></i>\n        </button>\n      </div>\n\n\n      {openColor && (<Palette\n        setState={setState}\n        state={state}\n        updateColor={updateColor}/>)}\n      {openLineSize && (<LineSize\n        setState={setState}\n        state={state}\n        updateLineSize={updateLineSize}/>)}\n\n\n      {/* Begin: Canvas and draw functionality */}\n      <div className=\"DrawGameView--container\">\n        <div\n        className=\"DrawGameView--slicer\"\n        style={_slicerStyles}>\n          <img\n          className=\"DrawGameView--silhouette\"\n          style={_silhouetteStyles}\n          height={bg_h}\n          width={bg_w}\n          src={IMG_SRC} alt=\"silhouette\"/>\n        </div>\n        <canvas\n        className=\"DrawGameView--canvas\"\n        ref={canvasRef}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        onMouseOut={e => onMouseOutHandler(setState)}\n        onMouseDown={e => onMouseDownHandler(setState)}\n        onMouseUp={e => onMouseUpHandler(setState)}\n        onMouseMove={e => onMouseMoveHandler(e, state, setState, CANVAS_W, CANVAS_H)}></canvas>\n      </div>\n      {/* End: Canvas and draw functionality */}\n    </div>\n  )\n}","import React from 'react'\n\nexport default function PlayerLobbyStatus(props) {\n  return (\n    <li>\n      {props.username + ' is in the lobby.'}\n      <i className=\"fas fa-user-minus HostLobbyView__namesList--deleteBtn\"></i>\n    </li>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport \"./GuestLobbyView.css\";\n\n// Helpers\nimport util from '../../helpers/util';\nimport constants from '../../constants';\n\n\n// subcomponents\nimport PlayerLobbyStatus from '../PlayerLobbyStatus';\nimport axios from 'axios';\nimport NavButton from '../NavButton';\n\n\nconst { API } = constants;\n\n\nexport default function GuestLobbyView(props) {\n  // === big rebuild \n  const { myUsername, socket, lobbyID, myLobbyObj, setMyLobbyObjHandler, setMyPlayerIDHandler, setLobbyIDHandler, changeViewHandler, setGamePromptHandler, myPlayerID } = props;\n  \n  const [state, setState] = useState({\n    tempInput: '',\n    host: null,\n  })\n  const { tempInput, host } = state;\n  \n  /** Handle when a new user joins lobby **/\n  useEffect(() => {\n    if(lobbyID) {\n      socket.on('newUserJoined', joiner => {\n        const prompt = `${joiner} has joined the lobby.`\n        setGamePromptHandler(prompt);\n        \n        axios.post(API + '/reqLobbyInfo', { lobbyID })\n        .then(resp => {\n          const { myLobbyObj } = resp.data;\n\n          setMyLobbyObjHandler(myLobbyObj);\n        })\n        .catch(error => {\n          setGamePromptHandler(error);\n        });\n      })\n    }\n  }, [lobbyID]);\n\n  /** General Listeners **/\n  useEffect(() => {\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    })\n\n    socket.on('userLeft', data => {\n      const { myLobbyObj, leaver } = data;\n      const error = `${leaver} has left the lobby.`;\n      setGamePromptHandler(error);\n      setMyLobbyObjHandler(myLobbyObj);\n    })\n  }, [])\n\n \n  /** Handle user typing lobbyID to join **/\n  const onChangeHandler = e => {\n    const tempInput = e.target.value;\n    setState(prev => ({...prev, tempInput}));\n  };\n\n  /** Handle join lobby **/\n  const joinRoomHandler = e => {\n    e.preventDefault()\n    console.log(`Joining room: ${tempInput}`)\n    \n    const data = {\n      lobbyID: tempInput,\n      myUsername\n    };\n    axios.post(API + '/joinLobby', data)\n    .then(resp => {\n      const { myLobbyObj, myPlayerID } = resp.data;\n      console.log('Successfully joined room:', resp.data);\n      setMyPlayerIDHandler(myPlayerID);\n      setMyLobbyObjHandler(myLobbyObj);\n      setLobbyIDHandler(tempInput);\n\n      socket.emit('joinLobby', { lobbyID: tempInput, myUsername });\n    })\n    .catch(err => {\n      const error = err.response.data.err;\n      setGamePromptHandler(error);\n    });\n  };\n\n  /** Handle leave lobby **/\n  const leaveLobbyHandler = e => {\n    e.preventDefault();\n    const data = {\n      lobbyID,\n      myUsername,\n      myPlayerID\n    }\n\n    // socket.emit('leaveLobby', data)\n    axios.post(API + '/leaveLobby', data)\n      .then(resp => {\n        const { nextView } = resp.data;\n        setGamePromptHandler(`You left the lobby.`);\n        changeViewHandler(nextView);\n      })\n      .catch();\n  }\n\n  /** Usernames list logic **/\n  const greeting = myUsername.trim().length === 0 ? 'Hello!' : `Hello, ${myUsername}!`;\n\n\n  /** Set host **/\n  useEffect(() => {\n    if(myLobbyObj) {\n      const host = myLobbyObj.host;\n      setState(prev => ({...prev, host}));\n\n      socket.on('cancelGame', nextView => {\n        setGamePromptHandler(`${host} cancelled the game.`);\n        changeViewHandler(nextView);\n      })\n    }\n  }, [myLobbyObj]);\n\n  let usernames;\n  if(myLobbyObj && myLobbyObj.players) {\n    console.log('Updating player list...');\n    const playerIDs = Object.keys(myLobbyObj.players);\n\n    usernames = playerIDs.map(playerID => {\n      const username = myLobbyObj.players[playerID].username;\n      return <PlayerLobbyStatus key={util.generateLobbyID(4)} username={username}/>;\n    })\n  }\n\n  return (\n    <div className=\"scrolling-background\">\n      <h1 className=\"GuestLobbyView__container--title App__colorScheme--title\">{greeting}</h1>\n\n      {!lobbyID && (\n        <form className=\"GuestLobbyView__container--IdField\">\n        <input\n        className=\"GuestLobbyView__form--codeInput App__colorScheme--inputField\"\n        onChange={onChangeHandler}\n        placeholder=\"Enter Lobby ID\"/>\n        <button\n        className=\"GuestLobbyView__form--btn App__colorScheme--button\"\n        type=\"submit\"\n        onClick={e => joinRoomHandler(e)}>Join</button>\n        <NavButton\n        nextView={'LandingView'}\n        buttonTitle={'Back'}\n        changeViewHandler={changeViewHandler}/>\n        </form>\n      )}\n\n    \n      {/** Begin: Render when user has successfully joined a lobby **/}\n      {host && (\n        <div className=\"GuestLobbyView__container--namesList\">\n          <h2 className=\"GuestLobbyView__welcomeMessage App__colorScheme--message\">Welcome to {host}'s lobby!</h2>}\n        \n          <h2 className=\"GuestLobbyView__namesList--message App__colorScheme--message\">Waiting for {host} to start the game...</h2>}\n          \n          <ul className=\"GuestLobbyView__namesList App__colorScheme--namesList\">\n            {usernames}\n          </ul>}\n\n\n        </div>)}\n          {/** End: Render when user has successfully joined a lobby **/}\n          \n          \n    </div>\n  )\n}\n      \n        \n// <button onClick={e => leaveLobbyHandler(e)}>Leave lobby</button>\n","import React, { useState, useEffect } from 'react'\n\nimport \"./HostLobbyView.css\";\nimport axios from 'axios';\n\n// subcomponents\nimport NavButton from '../NavButton'\nimport PlayerLobbyStatus from '../PlayerLobbyStatus';\n\n// Helpers\nimport util from '../../helpers/util'\nimport constants from '../../constants';\n\nconst { generateLobbyID } = util;\nconst { API } = constants;\n\nexport default function HostLobbyView(props) {\n  // ===bigrebuild\n  const { setGamePromptHandler, myUsername, socket, lobbyID, myLobbyObj, setMyLobbyObjHandler, setMyPlayerIDHandler, setLobbyIDHandler, changeViewHandler } = props;\n\n  /** Handle create lobby **/\n  useEffect(() => {\n    const genLobbyID = generateLobbyID(6);\n    const data = { genLobbyID, myUsername }\n    axios.post(API + '/createLobby', data)\n      .then(resp => {\n        const myLobbyObj = resp.data;\n        console.log('Created lobby:', myLobbyObj)\n        setMyLobbyObjHandler(myLobbyObj);\n        setLobbyIDHandler(genLobbyID);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  /** Handle join lobby **/\n  useEffect(() => {\n    if(lobbyID) {\n      console.log('Host joining lobby...');\n      const data = { lobbyID, myUsername };\n      axios.post(API + '/joinLobby', data)\n      .then(resp => {\n        const { myLobbyObj, myPlayerID } = resp.data;\n        console.log('Successfully joined room:', resp.data);\n        setMyPlayerIDHandler(myPlayerID);\n        setMyLobbyObjHandler(myLobbyObj);\n        \n        socket.emit('joinLobby', { lobbyID, myUsername });\n      })\n      .catch(err => console.log(err));\n    }\n  }, [lobbyID])\n\n  /** Handle when a new user joins lobby */\n  useEffect(() => {\n    if(lobbyID) {\n      socket.on('newUserJoined', joiner => {\n        const prompt = `${joiner} has joined the lobby.`;\n        setGamePromptHandler(prompt);\n        \n        axios.post(API + '/reqLobbyInfo', { lobbyID })\n        .then(resp => {\n          const { myLobbyObj } = resp.data;\n          console.log('Recieved updated lobbyObj:', myLobbyObj)\n          setMyLobbyObjHandler(myLobbyObj);\n        })\n        .catch(err => console.log(err));\n      });\n    }\n  }, [lobbyID]);\n\n  /** General Listeners */\n  useEffect(() => {\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    })\n\n    socket.on('userLeft', data => {\n      const { myLobbyObj, leaver } = data;\n      const prompt = `${leaver} has left the lobby.`\n      setGamePromptHandler(prompt);\n      setMyLobbyObjHandler(myLobbyObj);\n    })\n  }, [])\n\n  /** BACK BUTTON **/\n  const backButtonHandler = e => {\n    e.preventDefault();\n    \n    // stretch, remove from db instead of just switching view\n    const data = {\n      lobbyID,\n      nextView: 'LandingView'\n    }\n    socket.emit('cancelGame', data);\n    changeViewHandler(data.nextView);\n  }\n\n\n  /** START GAME BUTTON - add logic later for skip **/\n  const startButtonHandler = e => {\n    e.preventDefault();\n    console.log('Starting game...')\n    socket.emit('startGame', { lobbyID, nextView: 'InstructionsView' });\n  }\n\n  /** COPY lobbyID TO CLIPBOARD **/\n  const copyToClipboard = e => {\n    const toCopyStr = e.target.innerHTML;\n    const tempElement = document.createElement('textarea');\n\n    tempElement.value = toCopyStr;\n    document.body.appendChild(tempElement);\n    tempElement.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempElement);\n\n    setGamePromptHandler('Copied to clipboard!');\n  }\n\n\n  /** Usernames list logic **/\n  const greeting = myUsername.trim().length === 0 ? 'Hello!' : `Hello, ${myUsername}!`;\n\n  let usernames;\n  if(myLobbyObj && myLobbyObj.players) {\n   \n    const playerIDs = Object.keys(myLobbyObj.players);\n\n    usernames = playerIDs.map(playerID => {\n      const username = myLobbyObj.players[playerID].username;\n      return <PlayerLobbyStatus key={util.generateLobbyID(4)} username={username}/>;\n    })\n  }\n\n\n\n  return (\n    <div className=\"scrolling-background\">\n      <h1 className=\"HostLobbyView__container--title App__colorScheme--title\">{greeting}</h1>\n      \n      <div className=\"HostLobbyView__container--IdField\">\n        <h2 className=\"App__colorScheme--message\">Share this code with your friends:</h2>\n        <p onMouseDown={e => copyToClipboard(e)} className=\"App__colorScheme--code\">{lobbyID}</p>\n      </div>\n\n\n \n      <ul className=\"HostLobbyView__container--namesList App__colorScheme--namesList\">\n        {usernames}    \n      </ul>}\n \n      <div className=\"HostLobbyView__container--button\">\n        <button className=\"HostLobbyView__btn App__colorScheme--button\" onClick={e => startButtonHandler(e)}>Start game</button>\n        <button className=\"HostLobbyView__btn App__colorScheme--button\" onClick={e => backButtonHandler(e)}>Cancel game</button>\n      </div>\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport \"./InstructionsView.css\";\n\n\n// subcomponents\nimport MainImage from '../MainImage'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport CountdownTimer from '../CountdownTimer';\n\n\n// helpers\nimport constants from '../../constants';\nconst { VIEW_TIME, ROUND_TIME } = constants;\n\nexport default function InstructionsView(props) {\n  const { socket, changeViewHandler, myQuadrant } = props;\n\n  const [state, setState] = useState({\n    tick: true,\n    interval: null\n  })\n\n  const { tick, interval } = state;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(prev => ({...prev, tick: !tick}));\n      console.log('RERENDERING!?');\n    }, 900);\n\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    });\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <div className=\"InstructionsView__canvasBackground\">\n      <div className=\"InstructionsView__header App__colorScheme--header\" >\n        <CountdownTimer timeInMS={VIEW_TIME}/>\n        <button className=\"App__colorScheme--palette\"><i className=\"fas fa-palette\"></i></button>\n        <button className=\"App__colorScheme--palette\"><i className=\"fas fa-paint-brush\"></i></button>\n      </div>\n\n      <p className=\"InstructionsView__message--top App__colorScheme--title\">Your goal is to draw a picture as a team!</p>\n      \n      <MainImage\n        draggable={false}\n        myQuadrant={myQuadrant}\n      />\n\n      <p className=\"InstructionsView__message--bottom App__colorScheme--title\">This is your section of the final image. You can choose you colors and brush size above. Good Luck!</p>\n    </div>\n  )\n}\n\n\n\n// <p className=\"InstructionsView__message\">Your goal is to draw a picture as a team! This is your section of the final image. As time goes, the image will slowly fade. You will have {ROUND_TIME / 60000} {ROUND_TIME / 60000 > 1 ? 'minutes' : 'minute'} to draw it from memory!</p>\n\n\n\n// {timeLeft <= 0 && (<span className=\"CountdownTimer__timeUp--container\"><div className=\"CountdownTimer__timeUp--msg\">Time's up!</div></span>)}","import React from 'react'\nimport NavButton from '../NavButton'\nimport { findRenderedComponentWithType } from 'react-dom/test-utils';\nimport \"./LandingView.css\";;\n\n\n// subcomponents\n\nexport default function LandingView(props) {\n  \n  const { myUsername, inputChangeHandler, changeViewHandler, setGamePromptHandler } = props;\n\n  const placeholder = myUsername ? 'Change your username!' : 'Enter your name!'\n\n  /** Validate that user inputs a username **/\n  const usernameValidation = () => {\n    if(!myUsername) {\n      const prompt = `Please enter a username.`;\n      setGamePromptHandler(prompt);\n      changeViewHandler('LandingView');\n    }\n  }\n\n  return (\n    <div className=\"scrolling-background\">\n\n      <h1 className=\"LandingView__titleAnimation\">Draw-mageddon!</h1>\n\n      <form className=\"LandingView__container--nameForm\">\n        <input \n        autocomplete=\"off\"\n        className=\"LandingView__form--inputField App__colorScheme--inputField\"\n        type=\"text\"\n        id=\"username\"\n        placeholder={placeholder}\n        onChange={inputChangeHandler}/>\n      </form>\n\n      <div \n      className=\"LandingView__btnContainer\">\n\n        <div onClick={usernameValidation}>\n          <NavButton\n          nextView={'HostLobbyView'}\n          buttonTitle={'Create a lobby'}\n          changeViewHandler={changeViewHandler}/>\n\n          <NavButton\n          nextView={'GuestLobbyView'}\n          buttonTitle={'Join a lobby'}\n          changeViewHandler={changeViewHandler}/>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\n// {myUsername ? <h2 style={{color: \"red\"}}>{`You will play as ${myUsername}`}</h2> : ''}\n","import constants from '../constants';\nconst { MIN_RENDER_TIME, CANVAS_W, CANVAS_H } = constants;\n\n\nconst draw = (ctx, strokeData) => {\n  const { _x, _y, color, lineSize } = strokeData;\n  \n  let globalAlpha = lineSize < 20 ? 0.8 : 0.2; \n\n  ctx.globalAlpha = globalAlpha;\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.lineCap = 'round';\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.lineTo(_x, _y);\n  ctx.stroke();\n}\n\nconst renderQuad_1 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = (x * 0.5) * CANVAS_W;\n    const _y = (y * 0.5) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_2 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = ( (x * 0.5) + 0.5 ) * CANVAS_W;\n    const _y = (y * 0.5) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_3 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = (x * 0.5) * CANVAS_W;\n    const _y = ( (y * 0.5) + 0.5 ) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_4 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = ( (x * 0.5) + 0.5 ) * CANVAS_W;\n    const _y = ( (y * 0.5) + 0.5 ) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\n\n\n\nconst renderQuadrants = (ctx, finalCoordinates) => {\n  // loop through each quad\n  const quadrants = Object.keys(finalCoordinates);\n\n  // console.log('THIS SHOULD ONYL 1')\n  // console.log(finalCoordinates)\n  // console.log(quadrants)\n  quadrants.forEach(quadrant => {\n    const coordinates = finalCoordinates[quadrant];\n\n    if(quadrant === 'quadrant_1') {\n      renderQuad_1(ctx, coordinates);\n    } else if(quadrant === 'quadrant_2') {\n      renderQuad_2(ctx, coordinates)\n    } else if(quadrant === 'quadrant_3') {\n      renderQuad_3(ctx, coordinates);\n    } else if(quadrant === 'quadrant_4') {\n      renderQuad_4(ctx, coordinates);\n    }\n  })\n\n}\nconst renderFinalHelpers = {\n  renderQuadrants\n};\n\nexport default renderFinalHelpers;","import React, { useEffect, useRef, useState } from 'react'\nimport './ResultsView.css'\n\n// Notes: We will remove the NavButton component later and replace it with a socket emit so it automatically moves to the next page for all the players\n\n// subcomponents\nimport NavButton from '../NavButton'\n\n// helpers\nimport renderFinalHelpers from '../../helpers/renderFinalHelpers';\nimport constants from '../../constants';\n\n// styles\nimport './ResultsView.css';\nimport IMG_SRC from '../../assets/mona-lisa.jpg';\n\nconst { CANVAS_W, CANVAS_H } = constants;\n\nexport default function ResultsView(props) {\n\n  const { socket, changeViewHandler, finalCoordinates } = props;\n\n  const [state, setState] = useState({\n    toggleReplay: false\n  })\n  \n  const { toggleReplay } = state;\n\n  // helpers\n  const { renderQuadrants } = renderFinalHelpers;\n\n\n  // canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    if(finalCoordinates) {\n      console.log('Rendering...');\n      renderQuadrants(ctx, finalCoordinates);\n    }\n  });\n\n  const replayHandler = e => {\n    e.preventDefault();\n    setState(prev => ({...prev, toggleReplay: !toggleReplay}));\n  }\n\n  return (\n    <div className=\"ResultsView__background\">\n\n\n      <div className=\"ResultsView--container\">\n        <canvas\n        className=\"ResultsView--canvas\"\n        ref={canvasRef}\n        width={CANVAS_W}\n        height={CANVAS_H}>\n        </canvas>\n\n        <img\n        draggable={false}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        className=\"ResultsView--origImg\"\n        src={IMG_SRC}/>\n      </div>\n\n      <div className=\"ResultsView__container--button\">\n        <button\n          className=\"ResultsView__btn App__colorScheme--button\"\n          onClick={e => replayHandler(e)}>Replay\n        </button>\n        <button\n          className=\"ResultsView__btn App__colorScheme--button\"\n          onClick={e => {\n          e.preventDefault();\n          changeViewHandler('LandingView')\n        }}>Done\n        </button>\n        {/* <NavButton\n        nextView={'LandingView'}\n        buttonTitle={'Done'}\n        changeViewHandler={changeViewHandler}/> */}\n      </div>\n    </div>\n  )\n}\n\n\n// <h1 className=\"ResultsView__container--title App__colorScheme--title\">Ta-Daaa!</h1>\n\n// <h2 className=\"ResultsView__message App__colorScheme--message\">Such a work of art!</h2> \n","import React from 'react'\n\n// subcomponents\nimport NavButton from '../NavButton'\n\nexport default function ShareView(props) {\n  return (\n    <div className=\"scrolling-background\">\n\n      <NavButton\n      nextView={'LandingView'}\n      buttonTitle={'New Game'}\n      changeViewHandler={props.changeViewHandler}/>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport util from './helpers/util';\nimport \"./App.css\";\n\n// Socket\nimport socketIOClient from 'socket.io-client';\n\n// Helpers\nimport constants from './constants';\n\n// View Components\nimport DrawGameView from './components/views/DrawGameView';\nimport GuestLobbyView from './components/views/GuestLobbyView';\nimport HostLobbyView from './components/views/HostLobbyView';\nimport InstructionsView from './components/views/InstructionsView';\nimport LandingView from './components/views/LandingView';\nimport ResultsView from './components/views/ResultsView';\nimport ShareView from './components/views/ShareView';\nimport NavButton from './components/NavButton';\n\n\nconst { API } = constants;\n\n\nfunction App() {\n  /* View State\n  * view: this is how we will switch between modes. Conditional rendering based on what \n  * the value of this key will be. \n  * i.e. view: \"DrawGameView\" -> renders DrawGameView\n  * playerType: \"HOST\" or \"GUEST\"\n  */\n  const [state, setState] = useState({\n    view: 'LandingView',\n    myUsername: '',\n    socket: null,\n    lobbyID: null,\n    myPlayerID: null,\n    myLobbyObj: null,\n    myQuadrant: null,\n    gamePrompt: null,\n    finalCoordinates: null\n  });\n\n  const { view, myUsername, socket, lobbyID, myPlayerID, myLobbyObj, myQuadrant, gamePrompt, finalCoordinates } = state;\n\n  /** Set up socket and listeners **/\n  useEffect(() => {\n    const socket = socketIOClient(API);\n    setState(prev => ({...prev, socket}));\n\n    util.errorListener(socket);\n  }, []);\n\n  /** Fade out game prompt **/\n  useEffect(() => {\n    if(gamePrompt) {\n      setTimeout(() => {\n        setState(prev => ({...prev, gamePrompt: null}));\n      }, 2700);\n    }\n  },[gamePrompt])\n\n  /** Reset data when players go back to LandingView **/\n  useEffect(() => {\n    if(view === 'LandingView') {\n      console.log('Back to App ====>')\n      setState(prev => {\n        return ({...prev,\n          lobbyID: null,\n          myPlayerID: null,\n          myLobbyObj: null,\n          myQuadrant: null\n        });\n      });\n    };\n  }, [view]);\n\n  const setGamePromptHandler = gamePrompt => {\n    setState(prev => ({...prev, gamePrompt}));\n  }\n\n  const setMyLobbyObjHandler = myLobbyObj => {\n    console.log('Setting App component myLobbyObj to', myLobbyObj);\n    setState(prev => ({...prev, myLobbyObj}));\n  }\n\n  const setMyPlayerIDHandler = myPlayerID => {\n    console.log('Setting App component myPlayerID to', myPlayerID);\n    setState(prev => ({...prev, myPlayerID}));\n  }\n\n  const setLobbyIDHandler = lobbyID => {\n    console.log('Setting App component lobbyID to', lobbyID);\n    setState(prev => ({...prev, lobbyID}));\n  }\n\n  const setFinalCoordinatesHandler = finalCoordinates => {\n    console.log('Updating final coordinates... in App');\n    setState(prev => ({...prev, finalCoordinates}));\n  }\n  \n  // <NavButton /> helper functions\n  const changeViewHandler = view => {\n    console.log('Updating view to:', view)\n    setState(prev => ({...prev, view}));\n  }\n\n  // <LandingView /> helper functions\n  const inputChangeHandler = str => {\n    const myUsername = str.target.value;\n    setState(prev => ({...prev, myUsername}));\n  };\n\n\n  /** Set quadrant for slicing img **/\n  useEffect(() => {\n    if(myLobbyObj && myPlayerID && myLobbyObj.players) {\n      try {\n        const myQuadrant = myLobbyObj.players[myPlayerID].myQuadrant;\n  \n        setState(prev => ({...prev, myQuadrant}));\n      } catch {\n        console.log('Failed to set quadrant');\n      }\n    }\n  }, [myPlayerID, myLobbyObj]);\n  // === bigrebuild\n  \n\n  return (\n    <div className=\"App__container\">\n      {gamePrompt && <div className=\"App__generalGamePrompt-container\">\n        <h2 className=\"App__generalGamePrompt\">{gamePrompt}</h2>\n      </div>}\n\n      {state.view === 'LandingView' &&\n      <LandingView\n      setGamePromptHandler={setGamePromptHandler}\n      myUsername={myUsername}\n      inputChangeHandler={inputChangeHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'GuestLobbyView' &&\n      <GuestLobbyView\n      setGamePromptHandler={setGamePromptHandler}\n      myPlayerID={myPlayerID}\n      setGamePromptHandler={setGamePromptHandler}\n      myUsername={state.myUsername}\n      socket={socket}\n      lobbyID = {lobbyID}\n      myLobbyObj={myLobbyObj}\n      setMyLobbyObjHandler={setMyLobbyObjHandler}\n      setMyPlayerIDHandler={setMyPlayerIDHandler}\n      setLobbyIDHandler={setLobbyIDHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'HostLobbyView' &&\n      <HostLobbyView\n      setGamePromptHandler={setGamePromptHandler}\n      myUsername={myUsername}\n      socket={socket}\n      lobbyID = {lobbyID}\n      myLobbyObj={myLobbyObj}\n      setMyLobbyObjHandler={setMyLobbyObjHandler}\n      setMyPlayerIDHandler={setMyPlayerIDHandler}\n      setLobbyIDHandler={setLobbyIDHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'InstructionsView' &&\n      <InstructionsView\n      myQuadrant={myQuadrant}\n      socket={state.socket}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'DrawGameView' &&\n      <DrawGameView\n      setGamePromptHandler={setGamePromptHandler}\n      setFinalCoordinatesHandler={setFinalCoordinatesHandler}\n      myLobbyObj={state.myLobbyObj}\n      myQuadrant={myQuadrant}\n      socket={state.socket}\n      lobbyID={state.lobbyID}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'ResultsView' &&\n      <ResultsView\n      finalCoordinates={finalCoordinates}\n      socket={state.socket}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'ShareView' &&\n      <ShareView\n      changeViewHandler={changeViewHandler}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/mona-lisa.8ecc35e3.jpg\";"],"sourceRoot":""}