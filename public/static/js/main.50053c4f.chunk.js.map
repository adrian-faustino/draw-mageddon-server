{"version":3,"sources":["helpers/util.js","constants.js","helpers/paletteHelpers.js","helpers/drawHelpers.js","components/NavButton.js","components/Palette.js","components/MainImageStyles.js","components/MainImage.js","components/LineSize.js","helpers/countdownHelpers.js","components/CountdownTimer.js","components/CountdownTimerStyles.js","components/views/DrawGameViewStyles.js","components/RoundFinishedBlocker.js","components/views/DrawGameView.js","components/PlayerLobbyStatus.js","components/views/GuestLobbyView.js","components/views/HostLobbyView.js","components/views/InstructionsView.js","components/views/LandingView.js","helpers/renderFinalHelpers.js","components/views/ResultsView.js","components/views/ShareView.js","App.js","serviceWorker.js","index.js","assets/alternate2.jpg"],"names":["randomNumAllInclusive","min","max","Math","ceil","floor","random","util","generateLobbyID","ID_length","ALPHA_NUM","id","i","length","errorListener","socket","on","msg","console","log","err","CANVAS_H","window","innerHeight","constants","isDevMode","VIEW_TIME","ROUND_TIME","API","MIN_RENDER_TIME","CANVAS_W","HEIGHT_OFFSET","paletteHelpers","togglePalette","e","state","setState","preventDefault","openColor","prev","toggleLineSize","openLineSize","updateColor","currentColor","updateLineSize","currentLineSize","drawHelpers","onMouseOutHandler","currentUndoLength","drawing","onMouseDownHandler","onMouseUpHandler","onMouseMoveHandler","maxWidth","maxHeight","coordinates","x_offset","innerWidth","y_offset","x","clientX","y","clientY","coordinate","color","lineSize","draw","ctx","globalAlpha","strokeStyle","lineWidth","lineCap","beginPath","moveTo","lineTo","stroke","fillStyle","fill","closePath","clearCanvas","undoCanvas","lastIndex","undoLengths","spliceBy","slice","NavButton","props","className","onClick","changeViewHandler","nextView","onClickHandler","buttonTitle","Palette","MainImageStyles","imgStyles","key","val","style","height","width","transform","imgContainerStyles","overflow","containerWrapperStyles","display","justifyContent","alignItems","MainImage","myQuadrant","draggable","gameIMG","_imgStyles","_imgContainerStyles","_containerWrapperStyles","src","IMG_SRC","LineSize","countdownHelpers","formatZero","num","places","char","toString","formatMS","totalMS","totalMS_","h","m","s","ms","timerStyles","styles","CountdownTimer","timeInMS","warningOn","isDemo","useState","startTime","Date","now","_timerStyles","timeLeft","formatted_M","formatted_S","DrawGameViewStyles","silhouetteStyles","slicerStyles","RoundFinishedBlocker","roundFinished","className_","DrawGameView","setGamePromptHandler","lobbyID","myLobbyObj","setFinalCoordinatesHandler","opacity","roundTime","useEffect","setTimeout","finalCoordinates","emit","errMsg","PLAYERS_IN_ROOM","Object","keys","players","data","axios","post","then","catch","canvasRef","useRef","current","getContext","clearRect","forEach","top","right","_silhouetteStyles","_slicerStyles","bg_h","bg_w","colorClickHandler","lineSizeClickHandler","padding","alt","ref","onMouseOut","onMouseDown","onMouseUp","onMouseMove","PlayerLobbyStatus","isHost","username","GuestLobbyView","myUsername","setMyLobbyObjHandler","setMyPlayerIDHandler","setLobbyIDHandler","setGameIMGHandler","myPlayerID","tempInput","host","usernames","joiner","prompt","resp","error","leaver","largeImageURL","greeting","trim","map","playerID","onChange","target","value","placeholder","type","response","joinRoomHandler","HostLobbyView","genLobbyID","toCopyStr","innerHTML","tempElement","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","startButtonHandler","backButtonHandler","InstructionsView","tick","interval","setInterval","clearInterval","pointerEvents","LandingView","inputChangeHandler","autoComplete","strokeData","_x","_y","renderFinalHelpers","renderQuadrants","quadrant","rectX","rectY","textX","textY","rectWidth","rectHeight","fillRect","font","textAlign","textBaseline","fillText","renderDisconnected","delay","renderQuad_1","renderQuad_2","renderQuad_3","renderQuad_4","ResultsView","toggleReplay","backgroundSize","replayHandler","ShareView","App","view","gamePrompt","socketIOClient","str","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.50053c4f.chunk.js","sourcesContent":["// returns a random integer inclusize of min and max\nconst randomNumAllInclusive = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n// returns a 6 digit alphanumeric all capital ID\nconst generateLobbyID = (ID_length) => {\n  // List does not include 0 or O;\n  const ALPHA_NUM = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789';\n  let id = ''\n\n  // push random letters/numbers into the array until desired ID length\n  for (let i = 0; i < ID_length; i++) {\n    const randomIndex = randomNumAllInclusive(0, ALPHA_NUM.length - 1);\n    id += ALPHA_NUM[randomIndex]\n  }\n\n  return id;\n}\n\n// set up error listener\nconst errorListener = (socket) => {\n  socket.on('success', msg => console.log('Success:', msg));\n  socket.on('err', err => console.log('Error:', err));\n};\n\n\nconst util = {\n  randomNumAllInclusive,\n  generateLobbyID,\n  errorListener,\n};\n\nexport default util;","/** All time variables in milliseconds **/\n\n/** Switch between dev mode and production **/\nconst isDevMode = false;\nconst API = isDevMode ? 'http://localhost:5556' : 'https://draw-mageddon.herokuapp.com';\n\n/** length of time in InstructionsView **/\nconst VIEW_TIME = isDevMode ? 1000 : 15000;\n//=== Change the 1st number for dev mode ===// \n/** length of time in DrawGameView **/\nconst ROUND_TIME = isDevMode ? 1000 : 120000; \n\n/** for rendering final picture animation **/\nconst MIN_RENDER_TIME = 5000; \nconst CANVAS_H = window.innerHeight * 0.9;\nconst CANVAS_W = CANVAS_H * 0.8;\n\n/** DrawGameView canvas navbar offset */\nconst HEIGHT_OFFSET = 0.05;\n\n/** IMG API **/\n\nconst constants = {\n  isDevMode,\n  VIEW_TIME,\n  ROUND_TIME,\n  API,\n  MIN_RENDER_TIME,\n  CANVAS_W,\n  CANVAS_H,\n  HEIGHT_OFFSET\n}\n\nexport default constants;","const togglePalette = (e, state, setState) => {\n  e.preventDefault();\n  const openColor = !state.openColor;\n\n  setState(prev => ({...prev, openColor}));\n}\n\nconst toggleLineSize = (e, state, setState) => {\n  e.preventDefault();\n  const openLineSize = !state.openLineSize;\n\n  setState(prev => ({...prev, openLineSize}));\n}\n\nconst updateColor = (currentColor, state, setState) => {\n  // console.log('Updating color to', currentColor);\n\n  setState(prev => ({...prev, currentColor, openColor: false}));\n}\n\nconst updateLineSize = (currentLineSize , state, setState) => {\n  // console.log('Updating lineSize to', currentLineSize);\n\n  setState(prev => ({...prev, currentLineSize, openLineSize: false}));\n}\n\nconst paletteHelpers = {\n  togglePalette,\n  toggleLineSize,\n  updateColor,\n  updateLineSize\n};\n\nexport default paletteHelpers;","import constants from '../constants';\nconst { HEIGHT_OFFSET } = constants;\n\n\nconst onMouseOutHandler = (setState, currentUndoLength) => {\n  const drawing = false;\n\n  // setState(prev => ({...prev, drawing, undoLengths: [...prev.undoLengths, currentUndoLength]}));\n  setState(prev => ({...prev, drawing}));\n}\n\nconst onMouseDownHandler = (setState) => {\n  const drawing = true;\n\n  setState(prev => ({...prev, drawing}));\n};\n\n\nconst onMouseUpHandler = (setState, currentUndoLength) => {\n  const drawing = false;\n\n  // setState(prev => ({...prev, drawing, undoLengths: [...prev.undoLengths, currentUndoLength]}));\n  setState(prev => ({...prev, drawing}));\n};\n\n\nconst onMouseMoveHandler = (e, state, setState, maxWidth, maxHeight) => {\n  const { coordinates, drawing, currentColor, currentLineSize } = state;\n\n  if(drawing) {\n    const x_offset = window.innerWidth / 2 - (maxWidth / 2);\n    const y_offset = window.innerHeight / 2 - (maxHeight / 2);\n\n    let x = e.clientX - x_offset;\n    let y = e.clientY - y_offset;\n\n    // percentage relative to screen\n    y = y / maxHeight;\n    x = x / maxWidth;\n    const color = currentColor;\n    const lineSize = currentLineSize;\n\n    const coordinate = {\n      x: x,\n      y: y - HEIGHT_OFFSET,\n      color,\n      lineSize\n    }\n  \n    setState(prev => ({...prev, coordinates: [...coordinates, coordinate], maxWidth, maxHeight, openLineSize: false, openColor: false, currentUndoLength: prev.currentUndoLength + 1}));\n  }\n\n};\n\n\nconst draw = (ctx, coordinate) => {\n  const { x, y, color, lineSize } = coordinate;\n\n  let globalAlpha = lineSize < 20 ? 0.8 : 0.2; \n\n  ctx.globalAlpha = globalAlpha;\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.lineCap = 'round';\n\n//     // Wall\n// ctx.strokeRect(75, 140, 150, 110);\n\n// Door\n// ctx.fillRect(x, y, lineSize, lineSize);\n\n\n  ctx.beginPath();\n  ctx.moveTo(x, y);\n  ctx.lineTo(x, y);\n  ctx.stroke();\n  ctx.fillStyle = \"blue\";\n  ctx.fill();\n  ctx.closePath();\n};\n\n/** STRETCH - Clear **/\nconst clearCanvas = (e, state, setState) => {\n  e.preventDefault();\n  setState(prev => ({...prev, coordinates: []}));\n}\n\n/** STRETCH - Undo **/\nconst undoCanvas = (e, state, setState) => {\n  e.preventDefault();\n\n  const lastIndex = state.undoLengths.length - 1;\n  const spliceBy = state.undoLengths[lastIndex];\n\n  const coordinates = state.coordinates.slice(0, -1 * spliceBy);\n  setState(prev => ({...prev, coordinates}));\n}\n\nconst drawHelpers = {\n  onMouseOutHandler,\n  onMouseDownHandler,\n  onMouseUpHandler,\n  onMouseMoveHandler,\n  draw,\n  clearCanvas,\n  undoCanvas\n}\n\nexport default drawHelpers;","import React from 'react'\n// import classNames from \"classnames\";\nimport \"./NavButton.css\";\n\n\n// Notes: COMPLETE for now. Desired functionality tested.\n\nexport default function NavButton(props) {\n  const onClickHandler = e => {\n    e.preventDefault()\n\n    // props.nextView is passed down from the parent component. Change the string that is passed down to this button component to dictate which view to go into next.\n    props.changeViewHandler(props.nextView)\n  }\n\n  return (\n    <div>\n      <button\n      className=\"NavButton__btn App__colorScheme--button\"\n      onClick={e => onClickHandler(e)}\n      >{props.buttonTitle}</button>\n    </div>\n  )\n}\n","import React from 'react'\nimport './Palette.css';\n\n\nexport default function Palette(props) {\n  const { updateColor, state, setState } = props;\n\n  return (\n    <ul className=\"Palette__container\">\n\n      {/* 1st row */}\n      <li onClick={() => {\n        updateColor('brown', state, setState);\n        }}\n        >\n        <i id=\"brownColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('silver', state, setState);\n        }}\n        >\n        <i id=\"silverColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('pink', state, setState);\n        }}\n        >\n        <i id=\"pinkColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('green', state, setState);\n        }}\n        >\n        <i id=\"greenColor\" className=\"fas fa-tint\"></i>\n      </li>\n\n      {/* 2nd row */}\n      <li onClick={() => {\n        updateColor('red', state, setState);\n        }}\n        >\n        <i id=\"redColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('orange', state, setState);\n        }}\n        >\n        <i id=\"orangeColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('yellow', state, setState);\n        }}\n        >\n        <i id=\"yellowColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('khaki', state, setState);\n        }}\n        >\n        <i id=\"khakiColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      {/* 3rd row */}\n      <li onClick={() => {\n        updateColor('blue', state, setState);\n        }}\n        >\n        <i id=\"blueColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('violet', state, setState);\n        }}\n        >\n        <i id=\"violetColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('black', state, setState);\n        }}\n        >\n        <i id=\"blackColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('white', state, setState);\n        }}\n        >\n        <i id=\"whiteColor\" className=\"fas fa-tint\"></i>\n      </li>\n\n      {/* 4th row */}\n      <li onClick={() => {\n        updateColor('lightskyblue', state, setState);\n        }}\n        >\n        <i id=\"lightskyblueColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('lightgreen', state, setState);\n        }}\n        >\n        <i id=\"lightgreenColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('purple', state, setState);\n        }}\n        >\n        <i id=\"purpleColor\" className=\"fas fa-tint\"></i>\n      </li>\n      \n      <li onClick={() => {\n        updateColor('coral', state, setState);\n        }}\n        >\n        <i id=\"coralColor\" className=\"fas fa-tint\"></i>\n      </li>\n    </ul>\n  )\n}\n\n{/* === LINE SIZE === */}\n{/* 1st row */}\n// <li onClick={() => {\n//   updateLineSize(40, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeXL\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(30, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeL\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(20, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeM\" className=\"fas fa-paint-brush\"></i>\n// </li>\n\n// <li onClick={() => {\n//   updateLineSize(10, state, setState);\n//   }}\n//   >\n//   <i id=\"sizeS\" className=\"fas fa-paint-brush\"></i>\n// </li>","const imgStyles = (key, val) => {\n  const style = {\n    height: '800px',\n    width: '600px',\n    transform: 'translate(0, -50%)'\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n  return style;\n}\n\nconst imgContainerStyles = (key, val) => {\n  const style = {\n    height: '400px',\n    width: '300px',\n    overflow: 'hidden'\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\nconst containerWrapperStyles = (key, val) => {\n  const style = {\n    height: '100vh',\n    width: '100vw',\n    display: 'grid',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n  \n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\nconst MainImageStyles = {\n  imgStyles,\n  imgContainerStyles,\n  containerWrapperStyles\n}\n\nexport default MainImageStyles;","import React from 'react'\n\n// assets\n// import IMG_SRC from '../assets/mona-lisa.jpg'\nimport IMG_SRC from '../assets/alternate2.jpg'\n\n// styles\nimport './MainImage.css';\nimport MainImageStyles from './MainImageStyles';\n\nconst { imgStyles,\n  imgContainerStyles,\n  containerWrapperStyles } = MainImageStyles;\n  \n\nexport default function MainImage(props) {\n  const { myQuadrant, draggable, gameIMG } = props;\n\n  /*** make shallow copies and modify - fix for strict mode? ***/\n  const _imgStyles = imgStyles();\n  const _imgContainerStyles = imgContainerStyles();\n  const _containerWrapperStyles = containerWrapperStyles();\n  \n\n  if(myQuadrant === 'quadrant_1') {\n    _imgStyles['transform'] = 'translate(0, 0)';\n  } else if(myQuadrant === 'quadrant_2') {\n    _imgStyles['transform'] = 'translate(-50%, 0)';\n  } else if(myQuadrant === 'quadrant_3') {\n    _imgStyles['transform'] = 'translate(0, -50%)';\n  } else if(myQuadrant === 'quadrant_4') {\n    _imgStyles['transform'] = 'translate(-50%, -50%)';\n  }\n\n\n  return (\n    <div style={_containerWrapperStyles}>\n      <div className=\"MainImage__reference\" style={_imgContainerStyles}>\n        <img\n        className={\"MainImage__IMG\"}\n        draggable={draggable}\n        style={_imgStyles}\n        src={gameIMG || IMG_SRC}/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// styles\nimport './LineSize.css'\n\nexport default function LineSize(props) {\n\n  const { updateLineSize, state, setState } = props;\n\n\n  return (\n    <ul className=\"LineSize__container\">\n      \n    \n      <li onClick={() => {\n        updateLineSize(80, state, setState);\n        }}>\n        <i id=\"sizeXL\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(45, state, setState);\n        }}>\n        <i id=\"sizeL\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(20, state, setState);\n        }}>\n        <i id=\"sizeM\" className=\"fas fa-paint-brush\"></i>\n      </li>\n\n      <li onClick={() => {\n        updateLineSize(6, state, setState);\n        }}>\n        <i id=\"sizeS\" className=\"fas fa-paint-brush\"></i>\n      </li>\n    </ul>\n  )\n}\n","const formatMS = totalMS => {\n  let totalMS_ = totalMS;\n\n  const h = Math.floor(totalMS_ / (60 * 60 * 1000));\n  if (h > 0) {\n    totalMS_ = totalMS_ - (h * 60 * 60 * 1000);\n  }\n\n  const m = Math.floor(totalMS_ / (60 * 1000));\n  if (m > 0) {\n    totalMS_ = totalMS_ - (m * 60 * 1000);\n  }\n\n  const s = Math.floor(totalMS_ / (1000));\n  if (s > 0) {\n    totalMS_ = totalMS_ - (s * 1000);\n  }\n \n  const ms = totalMS_;\n\n  return {h, m, s, ms};\n};\n\nconst formatZero = (num, places) => {\n  let char = num.toString();\n\n  while (char.length < places) {\n    char = '0' + char;\n  }\n\n  return char;\n}\n\nconst countdownHelpers = {\n  formatZero,\n  formatMS\n};\n\nexport default countdownHelpers;","import React, { useState, useEffect } from 'react'\n\n// styles\nimport './CountdownTimer.css';\nimport CountdownTimerStyles from './CountdownTimerStyles';\n\n// helpers\nimport countdownHelpers from '../helpers/countdownHelpers';\n\nconst { timerStyles } = CountdownTimerStyles;\nconst { formatZero, formatMS } = countdownHelpers;\n\n\nexport default function CountdownTimer(props) {\n  const { timeInMS, warningOn, isDemo } = props;\n\n  const [state, setState] = useState({\n    ROUND_TIME: timeInMS,\n    startTime: Date.now(),\n  })\n  const { ROUND_TIME, startTime } = state;\n\n  // styles\n  const _timerStyles = timerStyles();\n\n  /** Timer logic **/\n  const timeNow = new Date();\n  const elapsed = timeNow - startTime;\n  let timeLeft = ROUND_TIME - elapsed;\n\n  /** Trigger 'Time up' screen */\n  if(timeLeft <= 0) {\n    timeLeft = 0;\n  }\n\n  if(timeLeft <= 20000 && warningOn) {\n    _timerStyles['animation'] = 'flash--warning 0.4s infinite';\n    _timerStyles['animationDirection'] = 'alternate-reverse';\n  } \n\n  const { h, m, s, ms } = formatMS(timeLeft);\n  const formatted_M = formatZero(m, 2);\n  const formatted_S = formatZero(s, 2);\n\n\n  return (\n    <div\n    style={_timerStyles}\n    className=\"InstructionsView__header--timer\">\n\n      {isDemo ? <span className=\"InstructionsView__isDemo-span\">{`Game begins in ${s} . . .`}</span> : (\n        <span>{formatted_M}:{formatted_S}</span>\n      )}\n\n\n      \n    </div>\n  )\n}\n    \n// {timeLeft <= 0 && (<span className=\"CountdownTimer__timeUp--container\"><div className=\"CountdownTimer__timeUp--msg\">Time's up!</div></span>)}\n\n// <div style={_timerStyles} className=\"CountdownTimer__container\">\n//   <span className=\"\">{formatted_M}</span>:<span className=\"\">{formatted_S}</span>\n// </div>","const timerStyles = (key, val) => {\n  const styles = {\n\n  }\n\n  if(key) {\n    styles[key] = val;\n  }\n\n  return styles;\n}\n\nconst CountdownTimerStyles = {\n  timerStyles\n}\n\nexport default CountdownTimerStyles;","// import IMG_SRC from '../../assets/mona-lisa.jpg';\nimport IMG_SRC from '../../assets/alternate2.jpg'\n\nconst silhouetteStyles = (key, val) => {\n  const style = {\n    transform: 'translate(25%, -25%)'\n  };\n\n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n};\n\nconst slicerStyles = (key, val) => {\n  const style = {\n    height: null,\n    width: null\n  }\n\n  if(key) {\n    style[key] = val;\n  }\n\n  return style;\n}\n\n\n\nconst DrawGameViewStyles = {\n  silhouetteStyles,\n  slicerStyles\n}\n\nexport default DrawGameViewStyles;","import React from 'react'\nimport './RoundFinishedBlocker.css';\n\n\nexport default function RoundFinishedBlocker(props) {\n  \n  const { roundFinished } = props;\n  \n  let className_ = 'RoundFinishedBlocker__container';\n  if(roundFinished) {\n    className_ += ' reveal';\n  }\n\n  return (\n    <div\n    className={className_}>\n      {roundFinished && <span className=\"RoundFinishedBlocker__bounce-span\">TIME'S UP!</span>}\n    </div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport './DrawGameView.css';\nimport axios from 'axios';\n\n// helpers\nimport paletteHelpers from '../../helpers/paletteHelpers';\nimport drawHelpers from '../../helpers/drawHelpers';\nimport constants from '../../constants';\n\n// Notes: We will remove the NavButton component later and replace it with a socket emit so it automatically moves to the next page for all the players\n\n// subcomponents\nimport NavButton from '../NavButton';\nimport Palette from '../Palette';\nimport MainImage from '../MainImage';\nimport LineSize from '../LineSize';\nimport CountdownTimer from '../CountdownTimer';\n\n// styles\n// import IMG_SRC from '../../assets/mona-lisa.jpg'\nimport IMG_SRC from '../../assets/alternate2.jpg'\nimport DrawGameViewStyles from './DrawGameViewStyles';\nimport RoundFinishedBlocker from '../RoundFinishedBlocker';\n\n\n\nconst { API, ROUND_TIME, CANVAS_W, CANVAS_H } = constants;\nconst { silhouetteStyles, slicerStyles } = DrawGameViewStyles;\n\n\nexport default function DrawGameView(props) {\n  const { setGamePromptHandler, lobbyID, socket, changeViewHandler, myQuadrant, myLobbyObj, setFinalCoordinatesHandler, gameIMG } = props;\n\n  const [state, setState] = useState({\n    coordinates: [],\n    drawing: false,\n    currentColor: 'black',\n    currentLineSize: 6,\n    openLineSize: false,\n    openColor: false,\n    roundFinished:false,\n    maxWidth: null,\n    maxHeight: null,\n    opacity: 1,\n    undoLengths: [],\n    currentUndoLength: 0\n  });\n\n  const { coordinates, drawing, currentColor, currentLineSize, openLineSize, openColor, roundTime, roundFinished, maxWidth, maxHeight, opacity, undoLengths, currentUndoLength } = state;\n\n\n  // helpers\n  const { togglePalette, toggleLineSize, updateLineSize, updateColor } = paletteHelpers;\n  const { onMouseOutHandler, onMouseUpHandler, onMouseDownHandler, onMouseMoveHandler, draw, clearCanvas, undoCanvas } = drawHelpers;\n\n  /** Game state listeners **/\n  useEffect(() => {\n    socket.on('roundFinished', () => {\n      // console.log('Round finished!');\n      const roundFinished = true;\n      \n      setTimeout(() => {\n        changeViewHandler('ResultsView');\n      }, 2000);\n\n      setState(prev => ({...prev, roundFinished}));\n    })\n    \n    /** Listen for final coordinates at the end of the game **/\n    socket.on('finalCoordinates', finalCoordinates => {\n\n      // console.log('Updating final coordinates.....');\n      setFinalCoordinatesHandler(finalCoordinates);\n      socket.emit('disconnectClient', lobbyID);\n    })\n\n    socket.on('fadeSilhouette', opacity => {\n      setState(prev => ({...prev, opacity}));\n    })\n\n    socket.on('err', errMsg => {\n      setGamePromptHandler(errMsg);\n    })\n  }, [])\n\n\n  // send final coordinates before view change\n  useEffect(() => {\n    if(roundFinished) {\n      const PLAYERS_IN_ROOM = Object.keys(myLobbyObj.players).length;\n      \n      const data = {\n        coordinates,\n        lobbyID,\n        myQuadrant,\n        PLAYERS_IN_ROOM\n      }\n\n      // console.log('Game finished. Sending final coordinates...', coordinates);\n\n      axios.post(API + '/finalCoords', data)\n      .then(() => {\n        // set mouse pointer events in this view to none\n      })\n      .catch(err => console.log(err));\n    }\n  }, [roundFinished])\n\n\n  // canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    coordinates.forEach(coordinate => {\n      const { x, y, color, lineSize } = coordinate;\n      const data = {\n        x: x * maxWidth,\n        y: y * maxHeight,\n        color,\n        lineSize\n      }\n      draw(ctx, data);\n    });\n  });\n\n  /** STRETCH - Undo logic **/\n  useEffect(() => {\n    if(!drawing) {\n      setState(prev => ({...prev, undoLengths: [...undoLengths, currentUndoLength], currentUndoLength: 0}));\n    }\n  }, [drawing]);\n\n\n  // ** BG LOGIC AND TRANSFORMATIONS ** //\n  const _silhouetteStyles = silhouetteStyles();\n  const _slicerStyles = slicerStyles();\n  const bg_h = (window.innerHeight * 0.9) * 2;\n  const bg_w = bg_h * 0.8;\n  \n  \n  let top;\n  let right;\n  if(myQuadrant === 'quadrant_1') {\n    top = '50%';\n    right = '50%';\n  } else if(myQuadrant === 'quadrant_2') {\n    top = '50%';\n    right = '150%';\n  } else if(myQuadrant === 'quadrant_3') {\n    top = '-50%';\n    right = '50%';\n  } else if(myQuadrant === 'quadrant_4') {\n    top = '-50%';\n    right = '150%';\n  }\n  _silhouetteStyles['top'] = top;\n  _silhouetteStyles['right'] = right;\n  _silhouetteStyles['opacity'] = opacity;\n\n  /** Set slicer height and width **/\n  _slicerStyles['height'] = CANVAS_H;\n  _slicerStyles['width'] = CANVAS_W;\n\n\n  // ** PALETTE BUTTONS LOGIC ** //\n  const lineSizeClickHandler = e => {\n    setState(prev => ({...prev, openColor: false}));\n    toggleLineSize(e, state, setState);\n  }\n\n  const colorClickHandler = e => {\n    setState(prev => ({...prev, openLineSize: false}));\n    togglePalette(e, state, setState);\n  }\n\n\n  return (\n    <div>\n      <div className=\"InstructionsView__header App__colorScheme--header\" >\n        <CountdownTimer\n        warningOn={true}\n        timeInMS={ROUND_TIME}/>\n\n        <button\n        className=\"App__colorScheme--palette\"\n        onClick={e => colorClickHandler(e)}><i\n        style={{color: currentColor}} className=\"fas fa-palette\"></i>\n        </button>\n\n        <button\n          className=\"App__colorScheme--palette\"\n          onClick={e => lineSizeClickHandler(e)}><i \n          style={{color: 'black'}}\n          className=\"fas fa-paint-brush\"></i>\n        </button>\n\n        <button \n        style={{padding:'0 10px'}}\n        className=\"App__colorScheme--palette\" onClick={e => undoCanvas(e, state, setState)}>Undo</button>\n        \n        <button \n        style={{padding:'0 10px'}}\n        className=\"App__colorScheme--palette\" onClick={e => clearCanvas(e, state, setState)}>Clear</button>\n\n      </div>\n\n\n      {openColor && (<Palette\n        setState={setState}\n        state={state}\n        updateColor={updateColor}/>)}\n      {openLineSize && (<LineSize\n        setState={setState}\n        state={state}\n        updateLineSize={updateLineSize}/>)}\n\n\n      {/* Begin: Canvas and draw functionality */}\n      <div className=\"DrawGameView--container\">\n        <div\n        className=\"DrawGameView--slicer\"\n        style={_slicerStyles}>\n          <img\n          className=\"DrawGameView--silhouette\"\n          style={_silhouetteStyles}\n          height={bg_h}\n          width={bg_w}\n          src={gameIMG || IMG_SRC} alt=\"silhouette\"/>\n        </div>\n        <canvas\n        className=\"DrawGameView--canvas\"\n        ref={canvasRef}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        onMouseOut={e => onMouseOutHandler(setState, currentUndoLength)}\n        onMouseDown={e => onMouseDownHandler(setState)}\n        onMouseUp={e => onMouseUpHandler(setState, currentUndoLength)}\n        onMouseMove={e => onMouseMoveHandler(e, state, setState, CANVAS_W, CANVAS_H)}></canvas>\n      </div>\n      {/* End: Canvas and draw functionality */}\n\n      <RoundFinishedBlocker roundFinished={roundFinished}/>\n\n    </div>\n  )\n}","import React from 'react'\nimport './PlayerLobbyStatus.css'\n\nexport default function PlayerLobbyStatus(props) {\n  const { isHost } = props;\n\n  return (\n    <li className=\"PlayerLobbyStatus__li\">\n      {props.username + ' is waiting the lobby.'}\n      {isHost && (\n        <i className=\"fas fa-user-minus HostLobbyView__namesList--deleteBtn\"></i>)}\n    </li>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport uuid from 'react-uuid';\nimport \"./GuestLobbyView.css\";\n\n// Helpers\nimport util from '../../helpers/util';\nimport constants from '../../constants';\n\n\n// subcomponents\nimport PlayerLobbyStatus from '../PlayerLobbyStatus';\nimport axios from 'axios';\nimport NavButton from '../NavButton';\n\n\nconst { API } = constants;\n\n\nexport default function GuestLobbyView(props) {\n  // === big rebuild \n  const { myUsername, socket, lobbyID, myLobbyObj, setMyLobbyObjHandler, setMyPlayerIDHandler, setLobbyIDHandler, changeViewHandler, setGamePromptHandler, myPlayerID, setGameIMGHandler } = props;\n  \n  const [state, setState] = useState({\n    tempInput: '',\n    host: null,\n    usernames: []\n  })\n  const { tempInput, host, usernames } = state;\n  \n  /** Handle when a new user joins lobby **/\n  useEffect(() => {\n    if(lobbyID) {\n      socket.on('newUserJoined', joiner => {\n        const prompt = `${joiner} has joined the lobby.`\n        setGamePromptHandler(prompt);\n        \n        axios.post(API + '/reqLobbyInfo', { lobbyID })\n        .then(resp => {\n          const { myLobbyObj } = resp.data;\n\n          setMyLobbyObjHandler(myLobbyObj);\n        })\n        .catch(error => {\n          setGamePromptHandler(error);\n        });\n      })\n    }\n  }, [lobbyID]);\n\n  /** General Listeners **/\n  useEffect(() => {\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    })\n\n    socket.on('userLeft', data => {\n      const { myLobbyObj, leaver } = data;\n      const error = `${leaver} has left the lobby.`;\n      setGamePromptHandler(error);\n      setMyLobbyObjHandler(myLobbyObj);\n    })\n\n    /** Set gameIMG **/\n    socket.on('gameIMG', gameIMG => {\n      console.log('Game img ==>', gameIMG.largeImageURL)\n      setGameIMGHandler(gameIMG.largeImageURL);\n      // changeViewHandler('InstructionsView');\n    })\n  }, [])\n\n \n  /** Handle user typing lobbyID to join **/\n  const onChangeHandler = e => {\n    const tempInput = e.target.value;\n    setState(prev => ({...prev, tempInput}));\n  };\n\n  /** Handle join lobby **/\n  const joinRoomHandler = e => {\n    e.preventDefault()\n    // console.log(`Joining room: ${tempInput}`)\n    \n    const data = {\n      lobbyID: tempInput,\n      myUsername\n    };\n    axios.post(API + '/joinLobby', data)\n    .then(resp => {\n      const { myLobbyObj, myPlayerID } = resp.data;\n      // console.log('Successfully joined room:', resp.data);\n      setMyPlayerIDHandler(myPlayerID);\n      setMyLobbyObjHandler(myLobbyObj);\n      setLobbyIDHandler(tempInput);\n\n      socket.emit('joinLobby', { lobbyID: tempInput, myUsername });\n    })\n    .catch(err => {\n      const error = err.response.data.err;\n      setGamePromptHandler(error);\n    });\n  };\n\n  /** Handle leave lobby **/\n  const leaveLobbyHandler = e => {\n    e.preventDefault();\n    const data = {\n      lobbyID,\n      myUsername,\n      myPlayerID\n    }\n\n    // socket.emit('leaveLobby', data)\n    axios.post(API + '/leaveLobby', data)\n      .then(resp => {\n        const { nextView } = resp.data;\n        setGamePromptHandler(`You left the lobby.`);\n        changeViewHandler(nextView);\n      })\n      .catch();\n  }\n\n  /** Usernames list logic **/\n  const greeting = myUsername.trim().length === 0 ? 'Hello!' : `Hello, ${myUsername}!`;\n\n\n  /** Set host **/\n  useEffect(() => {\n    if(myLobbyObj) {\n      const host = myLobbyObj.host;\n      setState(prev => ({...prev, host}));\n\n      socket.on('cancelGame', nextView => {\n        // setGamePromptHandler(`${host} cancelled the game.`);\n        setGamePromptHandler('Lobby cancelled.');\n        socket.emit('disconnectClient', lobbyID);\n        changeViewHandler(nextView);\n      })\n    }\n  }, [myLobbyObj]);\n\n\n  /** Handle usernames list **/\n  useEffect(() => {\n    if(myLobbyObj && myLobbyObj.players) {\n      // console.log('Updating player list...');\n      const playerIDs = Object.keys(myLobbyObj.players);\n  \n      const usernames = playerIDs.map(playerID => {\n        const username = myLobbyObj.players[playerID].username;\n        return <PlayerLobbyStatus isHost={false} key={util.generateLobbyID(4)} username={username}/>;\n      });\n\n      setState(prev => ({...prev, usernames}))\n    }\n  }, [myLobbyObj]);\n\n  return (\n    <div className=\"scrolling-background\">\n      <h1 className=\"GuestLobbyView__container--title App__colorScheme--title\">{greeting}</h1>\n\n      {!lobbyID && (\n        <form className=\"GuestLobbyView__container--IdField\">\n        <input\n        className=\"GuestLobbyView__form--codeInput App__colorScheme--inputField\"\n        onChange={onChangeHandler}\n        placeholder=\"Enter Lobby ID\"/>\n        <button\n        className=\"GuestLobbyView__form--btn App__colorScheme--button\"\n        type=\"submit\"\n        onClick={e => joinRoomHandler(e)}>Join</button>\n        <NavButton\n        nextView={'LandingView'}\n        buttonTitle={'Back'}\n        changeViewHandler={changeViewHandler}/>\n        </form>\n      )}\n\n    \n      {/** Begin: Render when user has successfully joined a lobby **/}\n      {host && (\n        <div className=\"GuestLobbyView__container--namesList\">\n          <h2 className=\"GuestLobbyView__welcomeMessage App__colorScheme--message\">Welcome to {host}'s lobby!</h2>\n        \n          <h2 className=\"GuestLobbyView__namesList--message App__colorScheme--message\">{`Waiting for ${host} to start the game . . .`}</h2>\n          \n          <ul className=\"GuestLobbyView__namesList App__colorScheme--namesList\">\n            {usernames}\n          </ul>\n\n\n        </div>)}\n          {/** End: Render when user has successfully joined a lobby **/}\n          \n          \n    </div>\n  )\n}\n      \n        \n// <button onClick={e => leaveLobbyHandler(e)}>Leave lobby</button>\n","import React, { useState, useEffect } from 'react'\n\nimport \"./HostLobbyView.css\";\nimport axios from 'axios';\n\n// subcomponents\nimport NavButton from '../NavButton'\nimport PlayerLobbyStatus from '../PlayerLobbyStatus';\n\n// Helpers\nimport util from '../../helpers/util'\nimport constants from '../../constants';\nimport gameImageHelpers from '../../helpers/gameImageHelpers'\n\nconst { generateLobbyID } = util;\nconst { isDevMode, API } = constants;\nconst { getIMG } = gameImageHelpers;\n \nexport default function HostLobbyView(props) {\n  // ===bigrebuild\n  const { setGamePromptHandler, myUsername, socket, lobbyID, myLobbyObj, setMyLobbyObjHandler, setMyPlayerIDHandler, setLobbyIDHandler, changeViewHandler, setGameIMGHandler } = props;\n\n  const [state, setState] = useState({\n    usernames: []\n  })\n\n  const { usernames } = state;\n\n  /** Handle create lobby **/\n  useEffect(() => {\n    const genLobbyID = generateLobbyID(6);\n    const data = { genLobbyID, myUsername }\n    axios.post(API + '/createLobby', data)\n      .then(resp => {\n        const myLobbyObj = resp.data;\n        // console.log('Created lobby:', myLobbyObj)\n        setMyLobbyObjHandler(myLobbyObj);\n        setLobbyIDHandler(genLobbyID);\n      })\n      .catch(err => {\n        console.log(err)\n        // const error = err.response.data.err\n        // changeViewHandler('LandingView');\n        // setGamePromptHandler(error);\n      });\n  }, []);\n\n  /** Handle join lobby **/\n  useEffect(() => {\n    if(lobbyID) {\n      // console.log('Host joining lobby...');\n      const data = { lobbyID, myUsername };\n      axios.post(API + '/joinLobby', data)\n      .then(resp => {\n        const { myLobbyObj, myPlayerID } = resp.data;\n        // console.log('Successfully joined room:', resp.data);\n        setMyPlayerIDHandler(myPlayerID);\n        setMyLobbyObjHandler(myLobbyObj);\n        \n        socket.emit('joinLobby', { lobbyID, myUsername });\n      })\n      .catch(err => console.log(err));\n    }\n  }, [lobbyID])\n\n  /** Handle when a new user joins lobby */\n  useEffect(() => {\n    if(lobbyID) {\n      socket.on('newUserJoined', joiner => {\n        const prompt = `${joiner} has joined the lobby.`;\n        setGamePromptHandler(prompt);\n        \n        axios.post(API + '/reqLobbyInfo', { lobbyID })\n        .then(resp => {\n          const { myLobbyObj } = resp.data;\n          // console.log('Recieved updated lobbyObj:', myLobbyObj)\n          setMyLobbyObjHandler(myLobbyObj);\n        })\n        .catch(err => console.log(err));\n      });\n    }\n  }, [lobbyID]);\n\n  /** General Listeners */\n  useEffect(() => {\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    })\n\n    socket.on('userLeft', data => {\n      const { myLobbyObj, leaver } = data;\n      const prompt = `${leaver} has left the lobby.`\n      setGamePromptHandler(prompt);\n      setMyLobbyObjHandler(myLobbyObj);\n    })\n\n    /** Set gameIMG **/\n    socket.on('gameIMG', gameIMG => {\n      console.log('Game img ==>', gameIMG.largeImageURL)\n      setGameIMGHandler(gameIMG.largeImageURL);\n      // changeViewHandler('InstructionsView');\n    })\n  }, [])\n\n  /** BACK BUTTON **/\n  const backButtonHandler = e => {\n    e.preventDefault();\n    \n    // stretch, remove from db instead of just switching view\n    const data = {\n      lobbyID,\n      nextView: 'LandingView'\n    }\n    // socket.emit('cancelGame', data);\n    // socket.emit('disconnectClient', lobbyID)\n    // changeViewHandler(data.nextView);\n\n\n    axios.post(API + '/cancelLobby', data)\n    .then(() => {\n      socket.emit('disconnectClient', lobbyID);\n      changeViewHandler('LandingView');\n    })\n    .catch(err => console.log(err))\n  }\n\n\n  /** START GAME BUTTON - add logic later for skip **/\n  const startButtonHandler = e => {\n    e.preventDefault();\n\n    // Switch to use API image or hard coded IMG\n    if (isDevMode) {\n      socket.emit('startGame', { lobbyID, nextView: 'InstructionsView' });\n    } else {\n      console.log('Making post req for images...')\n      axios.post(API + '/getIMG', { lobbyID })\n      .then(resp =>{\n  \n        console.log('starting game...')\n        socket.emit('startGame', { lobbyID, nextView: 'InstructionsView' });\n      }).catch(err => console.log(err))\n    }\n  };\n\n  /** COPY lobbyID TO CLIPBOARD **/\n  const copyToClipboard = e => {\n    const toCopyStr = e.target.innerHTML;\n    const tempElement = document.createElement('textarea');\n\n    tempElement.value = toCopyStr;\n    document.body.appendChild(tempElement);\n    tempElement.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempElement);\n\n    setGamePromptHandler('Copied to clipboard!');\n  }\n\n\n  /** Usernames list logic **/\n  const greeting = myUsername.trim().length === 0 ? 'Hello!' : `Hello, ${myUsername}!`;\n\n  /** Handle usernames list **/\n  useEffect(() => {\n    if(myLobbyObj && myLobbyObj.players) {\n      // console.log('Updating player list...');\n      const playerIDs = Object.keys(myLobbyObj.players);\n  \n      const usernames = playerIDs.map(playerID => {\n        const username = myLobbyObj.players[playerID].username;\n        return <PlayerLobbyStatus isHost={true} key={util.generateLobbyID(4)} username={username}/>;\n      });\n\n      setState(prev => ({...prev, usernames}))\n    }\n  }, [myLobbyObj]);\n\n  return (\n    <div className=\"scrolling-background\">\n      <h1 className=\"HostLobbyView__container--title App__colorScheme--title\">{greeting}</h1>\n      \n      <div className=\"HostLobbyView__container--IdField\">\n        <h2 className=\"App__colorScheme--message\">Share this code with your friends:</h2>\n        <p onMouseDown={e => copyToClipboard(e)} className=\"App__colorScheme--code\">{lobbyID}</p>\n      </div>\n\n      <ul className=\"HostLobbyView__container--namesList App__colorScheme--namesList\">\n        {usernames}    \n      </ul>\n\n \n      <div className=\"HostLobbyView__container--button\">\n        <button className=\"HostLobbyView__btn App__colorScheme--button\" onClick={e => startButtonHandler(e)}>Start game</button>\n        <button className=\"HostLobbyView__btn App__colorScheme--button\" onClick={e => backButtonHandler(e)}>Cancel game</button>\n      </div>\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport \"./InstructionsView.css\";\n\n\n// subcomponents\nimport MainImage from '../MainImage'\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport CountdownTimer from '../CountdownTimer';\n\n\n// helpers\nimport constants from '../../constants';\nconst { VIEW_TIME, ROUND_TIME } = constants;\n\nexport default function InstructionsView(props) {\n  const { socket, changeViewHandler, myQuadrant, gameIMG } = props;\n\n  const [state, setState] = useState({\n    tick: true,\n    interval: null\n  })\n\n  const { tick, interval } = state;\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setState(prev => ({...prev, tick: !tick}));\n\n    }, 900);\n\n    socket.on('changeView', nextView => {\n      changeViewHandler(nextView);\n    });\n\n    return () => {\n      clearInterval(interval);\n    }\n  }, []);\n\n  return (\n    <div className=\"InstructionsView__canvasBackground\">\n      <div className=\"InstructionsView__header App__colorScheme--header\" >\n        <CountdownTimer isDemo={true} timeInMS={VIEW_TIME}/>\n        <button style={{pointerEvents: 'none', color: 'black'}} className=\"App__colorScheme--palette\"><i className=\"fas fa-palette\"></i></button>\n        <button style={{pointerEvents: 'none', color: 'black'}}className=\"App__colorScheme--palette\"><i className=\"fas fa-paint-brush\"></i></button>\n\n        <button \n        style={{padding:'0 10px', pointerEvents: 'none'}}\n        className=\"App__colorScheme--palette\">Undo</button>\n\n        <button \n        style={{padding:'0 10px', pointerEvents: 'none'}}\n        className=\"App__colorScheme--palette\">Clear</button>\n\n      </div>\n\n      <p className=\"InstructionsView__message--top App__colorScheme--title\">Your goal is to draw a picture as a team.</p>\n      \n      <MainImage\n      gameIMG={gameIMG}\n      draggable={false}\n      myQuadrant={myQuadrant}\n      />\n\n      <p className=\"InstructionsView__message--bottom App__colorScheme--title\">This is your section to draw. The picture will fade over time so you will have to rely on your memory as you draw!</p>\n    </div>\n  )\n}\n\n\n\n// <p className=\"InstructionsView__message\">Your goal is to draw a picture as a team! This is your section of the final image. As time goes, the image will slowly fade. You will have {ROUND_TIME / 60000} {ROUND_TIME / 60000 > 1 ? 'minutes' : 'minute'} to draw it from memory!</p>\n\n\n\n// {timeLeft <= 0 && (<span className=\"CountdownTimer__timeUp--container\"><div className=\"CountdownTimer__timeUp--msg\">Time's up!</div></span>)}","import React from 'react'\nimport NavButton from '../NavButton'\nimport { findRenderedComponentWithType } from 'react-dom/test-utils';\nimport \"./LandingView.css\";;\n\n\n// subcomponents\n\nexport default function LandingView(props) {\n  \n  const { myUsername, inputChangeHandler, changeViewHandler, setGamePromptHandler } = props;\n\n  const placeholder = myUsername ? 'Change your username!' : 'Enter your name!'\n\n  /** Validate that user inputs a username **/\n  const usernameValidation = () => {\n    if(!myUsername) {\n      const prompt = `Please enter a username.`;\n      setGamePromptHandler(prompt);\n      changeViewHandler('LandingView');\n    }\n  }\n\n  return (\n    <div className=\"scrolling-background\">\n\n      <h1 className=\"LandingView__titleAnimation\">Draw-mageddon!</h1>\n\n      <form className=\"LandingView__container--nameForm\">\n        <input \n        autoComplete=\"off\"\n        className=\"LandingView__form--inputField App__colorScheme--inputField\"\n        type=\"text\"\n        id=\"username\"\n        placeholder={placeholder}\n        onChange={inputChangeHandler}/>\n      </form>\n\n      <div \n      className=\"LandingView__btnContainer\">\n\n        <div onClick={usernameValidation}>\n          <NavButton\n          nextView={'HostLobbyView'}\n          buttonTitle={'Create a lobby'}\n          changeViewHandler={changeViewHandler}/>\n\n          <NavButton\n          nextView={'GuestLobbyView'}\n          buttonTitle={'Join a lobby'}\n          changeViewHandler={changeViewHandler}/>\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\n// {myUsername ? <h2 style={{color: \"red\"}}>{`You will play as ${myUsername}`}</h2> : ''}\n","import constants from '../constants';\nconst { MIN_RENDER_TIME, CANVAS_W, CANVAS_H, HEIGHT_OFFSET } = constants;\n\n\nconst draw = (ctx, strokeData) => {\n  const { _x, _y, color, lineSize } = strokeData;\n  \n  let globalAlpha = lineSize < 20 ? 0.8 : 0.2; \n\n  ctx.globalAlpha = globalAlpha;\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.lineCap = 'round';\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineSize;\n  ctx.moveTo(_x, _y - HEIGHT_OFFSET);\n  ctx.lineTo(_x, _y - HEIGHT_OFFSET);\n  ctx.stroke();\n  ctx.closePath();\n}\n\nconst renderQuad_1 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = (x * 0.5) * CANVAS_W;\n    const _y = (y * 0.5) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_2 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = ( (x * 0.5) + 0.5 ) * CANVAS_W;\n    const _y = (y * 0.5) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_3 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = (x * 0.5) * CANVAS_W;\n    const _y = ( (y * 0.5) + 0.5 ) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderQuad_4 = (ctx, coordinates) => {\n  let delay = 0; // for replay feature\n\n  coordinates.forEach(coordinate => {\n    const { x, y, color, lineSize } = coordinate;\n\n    // CHANGE SCREEN RATIO HERE\n    const _x = ( (x * 0.5) + 0.5 ) * CANVAS_W;\n    const _y = ( (y * 0.5) + 0.5 ) * CANVAS_H;\n\n    const strokeData = {\n      _x, _y, color, lineSize\n    };\n    \n    delay += (MIN_RENDER_TIME / coordinates.length) + 3;\n    setTimeout(() => {\n      ctx.beginPath();\n      draw(ctx, strokeData);\n    }, delay);\n  })\n};\n\n\nconst renderDisconnected = (ctx, quadrant) => {\n  let rectX = CANVAS_W;\n  let rectY = CANVAS_H;\n  let textX = CANVAS_W;\n  let textY = CANVAS_H;\n  const rectWidth = CANVAS_W / 2;\n  const rectHeight = CANVAS_H / 2;\n\n  switch (quadrant) {\n    case \"quadrant_1\":\n      rectX *= 0;\n      rectY *= 0;\n      textX *= 0.25;\n      textY *= 0.25;\n      break;\n    case \"quadrant_2\":\n      rectX *= 0.5;\n      rectY *= 0;\n      textX *= 0.75;\n      textY *= 0.25;\n      break;\n    case \"quadrant_3\":\n      rectX *= 0;\n      rectY *= 0.5;\n      textX *= 0.25;\n      textY *= 0.75;\n      break;\n    case \"quadrant_4\":\n      rectX *= 0.5;\n      rectY *= 0.5;\n      textX *= 0.75;\n      textY *= 0.75;\n      break;\n  }\n\n  ctx.fillStyle = '#363535cb';\n  ctx.fillRect(rectX, rectY, rectWidth, rectHeight);\n  ctx.fillStyle = '#9a777';\n  ctx.font = 'italic bold 20px Fredoka One';\n  ctx.textAlign=\"center\"; \n  ctx.textBaseline = \"middle\";\n  ctx.fillText(\"DISCONNECTED\", textX, textY);\n}\n\n\nconst renderQuadrants = (ctx, finalCoordinates) => {\n  // loop through each quad\n  const quadrants = Object.keys(finalCoordinates);\n\n  // console.log('THIS SHOULD ONYL 1')\n  // console.log(finalCoordinates)\n  // console.log(quadrants)\n  quadrants.forEach(quadrant => {\n    const coordinates = finalCoordinates[quadrant];\n\n    /** Handle users that DC'ed **/\n    if(coordinates.length === 0) {\n      \n      return renderDisconnected(ctx, quadrant);\n    }\n\n    if(quadrant === 'quadrant_1') {\n      renderQuad_1(ctx, coordinates);\n    } else if(quadrant === 'quadrant_2') {\n      renderQuad_2(ctx, coordinates)\n    } else if(quadrant === 'quadrant_3') {\n      renderQuad_3(ctx, coordinates);\n    } else if(quadrant === 'quadrant_4') {\n      renderQuad_4(ctx, coordinates);\n    }\n  })\n\n}\nconst renderFinalHelpers = {\n  renderQuadrants\n};\n\nexport default renderFinalHelpers;","import React, { useEffect, useRef, useState } from 'react'\nimport './ResultsView.css'\n\n// Notes: We will remove the NavButton component later and replace it with a socket emit so it automatically moves to the next page for all the players\n\n// subcomponents\nimport NavButton from '../NavButton'\n\n// helpers\nimport renderFinalHelpers from '../../helpers/renderFinalHelpers';\nimport constants from '../../constants';\n\n// styles\nimport './ResultsView.css';\n// import IMG_SRC from '../../assets/mona-lisa.jpg';\nimport IMG_SRC from '../../assets/alternate2.jpg'\n\nconst { CANVAS_W, CANVAS_H } = constants;\n\nexport default function ResultsView(props) {\n\n  const { socket, changeViewHandler, finalCoordinates, gameIMG } = props;\n\n  const [state, setState] = useState({\n    toggleReplay: false\n  })\n  \n  const { toggleReplay } = state;\n\n  // helpers\n  const { renderQuadrants } = renderFinalHelpers;\n\n\n  // canvas\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);\n    if(finalCoordinates) {\n      // console.log('Rendering...');\n      renderQuadrants(ctx, finalCoordinates);\n    }\n  }, [toggleReplay]);\n\n  const replayHandler = e => {\n    e.preventDefault();\n    setState(prev => ({...prev, toggleReplay: !toggleReplay}));\n  }\n\n  return (\n    <div className=\"scrolling-background\">\n      <div className=\"ResultsView--container\">\n\n        <canvas\n        style={{backgroundSize: `${CANVAS_W}px ${CANVAS_H}px`}}\n        className=\"ResultsView--canvas\"\n        ref={canvasRef}\n        width={CANVAS_W}\n        height={CANVAS_H}>\n        </canvas>\n\n        \n        <img\n        draggable={false}\n        width={CANVAS_W}\n        height={CANVAS_H}\n        className=\"ResultsView--origImg\"\n        src={gameIMG || IMG_SRC}/>\n\n      </div>\n\n      <div className=\"ResultsView__container--button\">\n        <button\n          className=\"ResultsView__btn App__colorScheme--button\"\n          onClick={e => replayHandler(e)}>Replay\n        </button>\n        <button\n          className=\"ResultsView__btn App__colorScheme--button\"\n          onClick={e => {\n          e.preventDefault();\n          changeViewHandler('LandingView')\n        }}>Done\n        </button>\n        {/* <NavButton\n        nextView={'LandingView'}\n        buttonTitle={'Done'}\n        changeViewHandler={changeViewHandler}/> */}\n      </div>\n    </div>\n  )\n}\n\n\n// <h1 className=\"ResultsView__container--title App__colorScheme--title\">Ta-Daaa!</h1>\n\n// <h2 className=\"ResultsView__message App__colorScheme--message\">Such a work of art!</h2> \n","import React from 'react'\n\n// subcomponents\nimport NavButton from '../NavButton'\n\nexport default function ShareView(props) {\n  return (\n    <div className=\"scrolling-background\">\n\n      <NavButton\n      nextView={'LandingView'}\n      buttonTitle={'New Game'}\n      changeViewHandler={props.changeViewHandler}/>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport util from './helpers/util';\nimport \"./App.css\";\n\n// Socket\nimport socketIOClient from 'socket.io-client';\n\n// Helpers\nimport constants from './constants';\n\n// View Components\nimport DrawGameView from './components/views/DrawGameView';\nimport GuestLobbyView from './components/views/GuestLobbyView';\nimport HostLobbyView from './components/views/HostLobbyView';\nimport InstructionsView from './components/views/InstructionsView';\nimport LandingView from './components/views/LandingView';\nimport ResultsView from './components/views/ResultsView';\nimport ShareView from './components/views/ShareView';\nimport NavButton from './components/NavButton';\n\n\nconst { API } = constants;\n\n\nfunction App() {\n  /* View State\n  * view: this is how we will switch between modes. Conditional rendering based on what \n  * the value of this key will be. \n  * i.e. view: \"DrawGameView\" -> renders DrawGameView\n  * playerType: \"HOST\" or \"GUEST\"\n  */\n  const [state, setState] = useState({\n    view: 'LandingView',\n    myUsername: '',\n    socket: null,\n    lobbyID: null,\n    myPlayerID: null,\n    myLobbyObj: null,\n    myQuadrant: null,\n    gamePrompt: null,\n    gameIMG: null,\n    finalCoordinates: null\n  });\n\n  const { view, myUsername, socket, lobbyID, myPlayerID, myLobbyObj, myQuadrant, gamePrompt, finalCoordinates, gameIMG } = state;\n\n  /** Set up socket and listeners **/\n  useEffect(() => {\n    const socket = socketIOClient(API);\n    setState(prev => ({...prev, socket}));\n\n    util.errorListener(socket);\n  }, []);\n\n  /** Fade out game prompt **/\n  useEffect(() => {\n    if(gamePrompt) {\n      setTimeout(() => {\n        setState(prev => ({...prev, gamePrompt: null}));\n      }, 2700);\n    }\n  },[gamePrompt])\n\n  /** Reset data when players go back to LandingView **/\n  useEffect(() => {\n    if(view === 'LandingView') {\n      // console.log('Back to App ====>')\n      setState(prev => {\n        return ({...prev,\n          lobbyID: null,\n          myPlayerID: null,\n          myLobbyObj: null,\n          myQuadrant: null\n        });\n      });\n    };\n  }, [view]);\n\n  const setGamePromptHandler = gamePrompt => {\n    setState(prev => ({...prev, gamePrompt}));\n  }\n\n  const setMyLobbyObjHandler = myLobbyObj => {\n    // console.log('Setting App component myLobbyObj to', myLobbyObj);\n    setState(prev => ({...prev, myLobbyObj}));\n  }\n\n  const setGameIMGHandler = gameIMG => {\n    setState(prev => ({...prev, gameIMG}));\n  }\n\n  const setMyPlayerIDHandler = myPlayerID => {\n    // console.log('Setting App component myPlayerID to', myPlayerID);\n    setState(prev => ({...prev, myPlayerID}));\n  }\n\n  const setLobbyIDHandler = lobbyID => {\n    // console.log('Setting App component lobbyID to', lobbyID);\n    setState(prev => ({...prev, lobbyID}));\n  }\n\n  const setFinalCoordinatesHandler = finalCoordinates => {\n    // console.log('Updating final coordinates... in App');\n    setState(prev => ({...prev, finalCoordinates}));\n  }\n  \n  // <NavButton /> helper functions\n  const changeViewHandler = view => {\n    // console.log('Updating view to:', view)\n    setState(prev => ({...prev, view}));\n  }\n\n  // <LandingView /> helper functions\n  const inputChangeHandler = str => {\n    const myUsername = str.target.value;\n    setState(prev => ({...prev, myUsername}));\n  };\n\n\n  /** Set quadrant for slicing img **/\n  useEffect(() => {\n    if(myLobbyObj && myPlayerID && myLobbyObj.players) {\n      try {\n        const myQuadrant = myLobbyObj.players[myPlayerID].myQuadrant;\n  \n        setState(prev => ({...prev, myQuadrant}));\n      } catch {\n        // console.log('Failed to set quadrant');\n      }\n    }\n  }, [myPlayerID, myLobbyObj]);\n  // === bigrebuild\n  \n\n  return (\n    <div className=\"App__container\">\n      {gamePrompt && <div className=\"App__generalGamePrompt-container\">\n        <h2 className=\"App__generalGamePrompt\">{gamePrompt}</h2>\n      </div>}\n\n      {state.view === 'LandingView' &&\n      <LandingView\n      setGamePromptHandler={setGamePromptHandler}\n      myUsername={myUsername}\n      inputChangeHandler={inputChangeHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'GuestLobbyView' &&\n      <GuestLobbyView\n      setGamePromptHandler={setGamePromptHandler}\n      myPlayerID={myPlayerID}\n      setGamePromptHandler={setGamePromptHandler}\n      setGameIMGHandler={setGameIMGHandler}\n      myUsername={state.myUsername}\n      socket={socket}\n      lobbyID = {lobbyID}\n      myLobbyObj={myLobbyObj}\n      setMyLobbyObjHandler={setMyLobbyObjHandler}\n      setMyPlayerIDHandler={setMyPlayerIDHandler}\n      setLobbyIDHandler={setLobbyIDHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'HostLobbyView' &&\n      <HostLobbyView\n      setGamePromptHandler={setGamePromptHandler}\n      setGameIMGHandler={setGameIMGHandler}\n      myUsername={myUsername}\n      socket={socket}\n      lobbyID = {lobbyID}\n      myLobbyObj={myLobbyObj}\n      setMyLobbyObjHandler={setMyLobbyObjHandler}\n      setMyPlayerIDHandler={setMyPlayerIDHandler}\n      setLobbyIDHandler={setLobbyIDHandler}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'InstructionsView' &&\n      <InstructionsView\n      myQuadrant={myQuadrant}\n      gameIMG={gameIMG}\n      socket={state.socket}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'DrawGameView' &&\n      <DrawGameView\n      gameIMG={gameIMG}\n      setGamePromptHandler={setGamePromptHandler}\n      setFinalCoordinatesHandler={setFinalCoordinatesHandler}\n      setGameIMGHandler={setGameIMGHandler}\n      myLobbyObj={state.myLobbyObj}\n      myQuadrant={myQuadrant}\n      socket={state.socket}\n      lobbyID={state.lobbyID}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'ResultsView' &&\n      <ResultsView\n      gameIMG={gameIMG}\n      finalCoordinates={finalCoordinates}\n      socket={state.socket}\n      changeViewHandler={changeViewHandler}/>}\n\n      {state.view === 'ShareView' &&\n      <ShareView\n      changeViewHandler={changeViewHandler}/>}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/alternate2.8444093b.jpg\";"],"sourceRoot":""}